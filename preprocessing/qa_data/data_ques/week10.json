[
 {
  "question": "What is week 10 lecture ?",
  "answer": "Beyond RDBMSs.",
  "intent": "description",
  "key_words": [
   "week",
   "10",
   "lecture"
  ]
 },
 {
  "question": "What is week 10 lecture ?",
  "answer": "Beyond RDBMSs.",
  "intent": "description",
  "key_words": [
   "week",
   "10",
   "lecture"
  ]
 },
 {
  "question": "What does week 10 lecture mean ?",
  "answer": "Beyond RDBMSs.",
  "intent": "description",
  "key_words": [
   "week",
   "10",
   "lecture"
  ]
 },
 {
  "question": "Tell me something about week 10 lecture ?",
  "answer": "Beyond RDBMSs.",
  "intent": "description",
  "key_words": [
   "week",
   "10",
   "lecture"
  ]
 },
 {
  "question": "Explain week 10 lecture ?",
  "answer": "Beyond RDBMSs.",
  "intent": "description",
  "key_words": [
   "week",
   "10",
   "lecture"
  ]
 },
 {
  "question": "Can you tell me about week 10 lecture ?",
  "answer": "Beyond RDBMSs.",
  "intent": "description",
  "key_words": [
   "week",
   "10",
   "lecture"
  ]
 },
 {
  "question": "What do you know about week 10 lecture ?",
  "answer": "Beyond RDBMSs.",
  "intent": "description",
  "key_words": [
   "week",
   "10",
   "lecture"
  ]
 },
 {
  "question": "What can you tell me about week 10 lecture ?",
  "answer": "Beyond RDBMSs.",
  "intent": "description",
  "key_words": [
   "week",
   "10",
   "lecture"
  ]
 },
 {
  "question": "I want to know aboutweek 10 lecture",
  "answer": "Beyond RDBMSs.",
  "intent": "description",
  "key_words": [
   "week",
   "10",
   "lecture"
  ]
 },
 {
  "question": "Do you have information about week 10 lecture ?",
  "answer": "Beyond RDBMSs.",
  "intent": "description",
  "key_words": [
   "week",
   "10",
   "lecture"
  ]
 },
 {
  "question": "Do you know week 10 lecture ?",
  "answer": "Beyond RDBMSs.",
  "intent": "description",
  "key_words": [
   "week",
   "10",
   "lecture"
  ]
 },
 {
  "question": "what about week 10 lecture ?",
  "answer": "Beyond RDBMSs.",
  "intent": "description",
  "key_words": [
   "week",
   "10",
   "lecture"
  ]
 },
 {
  "question": "What is future of database ?",
  "answer": "Core \"database\" goals:\n deal with very large amounts of data (terabytes, petabyes, ...)\n very-high-level languages (deal with big data in uniform ways)\n query execution   (if evaluation too slow \u21d2 useless)\n At the moment (and for the last 20 years) RDBMSs dominate ...\n simple/clean data model, backed up by theory\n high-level language for accessing data\n 40 years development work on RDBMS engine technology\n RDBMSs work well in domains with uniform, structured data.\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What is future of database ?",
  "answer": "Core \"database\" goals:\n deal with very large amounts of data (terabytes, petabyes, ...)\n very-high-level languages (deal with big data in uniform ways)\n query execution   (if evaluation too slow \u21d2 useless)\n At the moment (and for the last 20 years) RDBMSs dominate ...\n simple/clean data model, backed up by theory\n high-level language for accessing data\n 40 years development work on RDBMS engine technology\n RDBMSs work well in domains with uniform, structured data.\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What does future of database mean ?",
  "answer": "Core \"database\" goals:\n deal with very large amounts of data (terabytes, petabyes, ...)\n very-high-level languages (deal with big data in uniform ways)\n query execution   (if evaluation too slow \u21d2 useless)\n At the moment (and for the last 20 years) RDBMSs dominate ...\n simple/clean data model, backed up by theory\n high-level language for accessing data\n 40 years development work on RDBMS engine technology\n RDBMSs work well in domains with uniform, structured data.\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Tell me something about future of database ?",
  "answer": "Core \"database\" goals:\n deal with very large amounts of data (terabytes, petabyes, ...)\n very-high-level languages (deal with big data in uniform ways)\n query execution   (if evaluation too slow \u21d2 useless)\n At the moment (and for the last 20 years) RDBMSs dominate ...\n simple/clean data model, backed up by theory\n high-level language for accessing data\n 40 years development work on RDBMS engine technology\n RDBMSs work well in domains with uniform, structured data.\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Explain future of database ?",
  "answer": "Core \"database\" goals:\n deal with very large amounts of data (terabytes, petabyes, ...)\n very-high-level languages (deal with big data in uniform ways)\n query execution   (if evaluation too slow \u21d2 useless)\n At the moment (and for the last 20 years) RDBMSs dominate ...\n simple/clean data model, backed up by theory\n high-level language for accessing data\n 40 years development work on RDBMS engine technology\n RDBMSs work well in domains with uniform, structured data.\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Can you tell me about future of database ?",
  "answer": "Core \"database\" goals:\n deal with very large amounts of data (terabytes, petabyes, ...)\n very-high-level languages (deal with big data in uniform ways)\n query execution   (if evaluation too slow \u21d2 useless)\n At the moment (and for the last 20 years) RDBMSs dominate ...\n simple/clean data model, backed up by theory\n high-level language for accessing data\n 40 years development work on RDBMS engine technology\n RDBMSs work well in domains with uniform, structured data.\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What do you know about future of database ?",
  "answer": "Core \"database\" goals:\n deal with very large amounts of data (terabytes, petabyes, ...)\n very-high-level languages (deal with big data in uniform ways)\n query execution   (if evaluation too slow \u21d2 useless)\n At the moment (and for the last 20 years) RDBMSs dominate ...\n simple/clean data model, backed up by theory\n high-level language for accessing data\n 40 years development work on RDBMS engine technology\n RDBMSs work well in domains with uniform, structured data.\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What can you tell me about future of database ?",
  "answer": "Core \"database\" goals:\n deal with very large amounts of data (terabytes, petabyes, ...)\n very-high-level languages (deal with big data in uniform ways)\n query execution   (if evaluation too slow \u21d2 useless)\n At the moment (and for the last 20 years) RDBMSs dominate ...\n simple/clean data model, backed up by theory\n high-level language for accessing data\n 40 years development work on RDBMS engine technology\n RDBMSs work well in domains with uniform, structured data.\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "I want to know aboutfuture of database",
  "answer": "Core \"database\" goals:\n deal with very large amounts of data (terabytes, petabyes, ...)\n very-high-level languages (deal with big data in uniform ways)\n query execution   (if evaluation too slow \u21d2 useless)\n At the moment (and for the last 20 years) RDBMSs dominate ...\n simple/clean data model, backed up by theory\n high-level language for accessing data\n 40 years development work on RDBMS engine technology\n RDBMSs work well in domains with uniform, structured data.\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Do you have information about future of database ?",
  "answer": "Core \"database\" goals:\n deal with very large amounts of data (terabytes, petabyes, ...)\n very-high-level languages (deal with big data in uniform ways)\n query execution   (if evaluation too slow \u21d2 useless)\n At the moment (and for the last 20 years) RDBMSs dominate ...\n simple/clean data model, backed up by theory\n high-level language for accessing data\n 40 years development work on RDBMS engine technology\n RDBMSs work well in domains with uniform, structured data.\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Do you know future of database ?",
  "answer": "Core \"database\" goals:\n deal with very large amounts of data (terabytes, petabyes, ...)\n very-high-level languages (deal with big data in uniform ways)\n query execution   (if evaluation too slow \u21d2 useless)\n At the moment (and for the last 20 years) RDBMSs dominate ...\n simple/clean data model, backed up by theory\n high-level language for accessing data\n 40 years development work on RDBMS engine technology\n RDBMSs work well in domains with uniform, structured data.\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "what about future of database ?",
  "answer": "Core \"database\" goals:\n deal with very large amounts of data (terabytes, petabyes, ...)\n very-high-level languages (deal with big data in uniform ways)\n query execution   (if evaluation too slow \u21d2 useless)\n At the moment (and for the last 20 years) RDBMSs dominate ...\n simple/clean data model, backed up by theory\n high-level language for accessing data\n 40 years development work on RDBMS engine technology\n RDBMSs work well in domains with uniform, structured data.\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What is future of database ?",
  "answer": "Limitations/pitfalls of RDBMSs:\n NULL is ambiguous: unknown, not applicable, not supplied\n \"limited\" support for constraints/integrity and rules\n no support for uncertainty (data represents the state-of-the-world)\n data model too simple (e.g. no direct support for complex objects)\n query model too rigid (e.g. no approximate matching)\n continually changing data sources not well-handled\n data must be \"molded\" to fit a single rigid schema\n database systems must be manually \"tuned\"\n do not scale well to some data sets (e.g. Google, Telco's)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What is future of database ?",
  "answer": "Limitations/pitfalls of RDBMSs:\n NULL is ambiguous: unknown, not applicable, not supplied\n \"limited\" support for constraints/integrity and rules\n no support for uncertainty (data represents the state-of-the-world)\n data model too simple (e.g. no direct support for complex objects)\n query model too rigid (e.g. no approximate matching)\n continually changing data sources not well-handled\n data must be \"molded\" to fit a single rigid schema\n database systems must be manually \"tuned\"\n do not scale well to some data sets (e.g. Google, Telco's)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What does future of database mean ?",
  "answer": "Limitations/pitfalls of RDBMSs:\n NULL is ambiguous: unknown, not applicable, not supplied\n \"limited\" support for constraints/integrity and rules\n no support for uncertainty (data represents the state-of-the-world)\n data model too simple (e.g. no direct support for complex objects)\n query model too rigid (e.g. no approximate matching)\n continually changing data sources not well-handled\n data must be \"molded\" to fit a single rigid schema\n database systems must be manually \"tuned\"\n do not scale well to some data sets (e.g. Google, Telco's)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Tell me something about future of database ?",
  "answer": "Limitations/pitfalls of RDBMSs:\n NULL is ambiguous: unknown, not applicable, not supplied\n \"limited\" support for constraints/integrity and rules\n no support for uncertainty (data represents the state-of-the-world)\n data model too simple (e.g. no direct support for complex objects)\n query model too rigid (e.g. no approximate matching)\n continually changing data sources not well-handled\n data must be \"molded\" to fit a single rigid schema\n database systems must be manually \"tuned\"\n do not scale well to some data sets (e.g. Google, Telco's)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Explain future of database ?",
  "answer": "Limitations/pitfalls of RDBMSs:\n NULL is ambiguous: unknown, not applicable, not supplied\n \"limited\" support for constraints/integrity and rules\n no support for uncertainty (data represents the state-of-the-world)\n data model too simple (e.g. no direct support for complex objects)\n query model too rigid (e.g. no approximate matching)\n continually changing data sources not well-handled\n data must be \"molded\" to fit a single rigid schema\n database systems must be manually \"tuned\"\n do not scale well to some data sets (e.g. Google, Telco's)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Can you tell me about future of database ?",
  "answer": "Limitations/pitfalls of RDBMSs:\n NULL is ambiguous: unknown, not applicable, not supplied\n \"limited\" support for constraints/integrity and rules\n no support for uncertainty (data represents the state-of-the-world)\n data model too simple (e.g. no direct support for complex objects)\n query model too rigid (e.g. no approximate matching)\n continually changing data sources not well-handled\n data must be \"molded\" to fit a single rigid schema\n database systems must be manually \"tuned\"\n do not scale well to some data sets (e.g. Google, Telco's)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What do you know about future of database ?",
  "answer": "Limitations/pitfalls of RDBMSs:\n NULL is ambiguous: unknown, not applicable, not supplied\n \"limited\" support for constraints/integrity and rules\n no support for uncertainty (data represents the state-of-the-world)\n data model too simple (e.g. no direct support for complex objects)\n query model too rigid (e.g. no approximate matching)\n continually changing data sources not well-handled\n data must be \"molded\" to fit a single rigid schema\n database systems must be manually \"tuned\"\n do not scale well to some data sets (e.g. Google, Telco's)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What can you tell me about future of database ?",
  "answer": "Limitations/pitfalls of RDBMSs:\n NULL is ambiguous: unknown, not applicable, not supplied\n \"limited\" support for constraints/integrity and rules\n no support for uncertainty (data represents the state-of-the-world)\n data model too simple (e.g. no direct support for complex objects)\n query model too rigid (e.g. no approximate matching)\n continually changing data sources not well-handled\n data must be \"molded\" to fit a single rigid schema\n database systems must be manually \"tuned\"\n do not scale well to some data sets (e.g. Google, Telco's)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "I want to know aboutfuture of database",
  "answer": "Limitations/pitfalls of RDBMSs:\n NULL is ambiguous: unknown, not applicable, not supplied\n \"limited\" support for constraints/integrity and rules\n no support for uncertainty (data represents the state-of-the-world)\n data model too simple (e.g. no direct support for complex objects)\n query model too rigid (e.g. no approximate matching)\n continually changing data sources not well-handled\n data must be \"molded\" to fit a single rigid schema\n database systems must be manually \"tuned\"\n do not scale well to some data sets (e.g. Google, Telco's)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Do you have information about future of database ?",
  "answer": "Limitations/pitfalls of RDBMSs:\n NULL is ambiguous: unknown, not applicable, not supplied\n \"limited\" support for constraints/integrity and rules\n no support for uncertainty (data represents the state-of-the-world)\n data model too simple (e.g. no direct support for complex objects)\n query model too rigid (e.g. no approximate matching)\n continually changing data sources not well-handled\n data must be \"molded\" to fit a single rigid schema\n database systems must be manually \"tuned\"\n do not scale well to some data sets (e.g. Google, Telco's)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Do you know future of database ?",
  "answer": "Limitations/pitfalls of RDBMSs:\n NULL is ambiguous: unknown, not applicable, not supplied\n \"limited\" support for constraints/integrity and rules\n no support for uncertainty (data represents the state-of-the-world)\n data model too simple (e.g. no direct support for complex objects)\n query model too rigid (e.g. no approximate matching)\n continually changing data sources not well-handled\n data must be \"molded\" to fit a single rigid schema\n database systems must be manually \"tuned\"\n do not scale well to some data sets (e.g. Google, Telco's)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "what about future of database ?",
  "answer": "Limitations/pitfalls of RDBMSs:\n NULL is ambiguous: unknown, not applicable, not supplied\n \"limited\" support for constraints/integrity and rules\n no support for uncertainty (data represents the state-of-the-world)\n data model too simple (e.g. no direct support for complex objects)\n query model too rigid (e.g. no approximate matching)\n continually changing data sources not well-handled\n data must be \"molded\" to fit a single rigid schema\n database systems must be manually \"tuned\"\n do not scale well to some data sets (e.g. Google, Telco's)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What is future of database ?",
  "answer": " Extend the relational model ...\n add new data types and query ops for new applications deal with uncertainty/inaccuracy/approximation in data\n Replace the relational model ...\n object-oriented DBMS ... OO programming with persistent objects\n XML DBMS ... all data stored as XML documents, new query model\n application-effective data model (e.g. (key,value) pairs)\n Performance ...\n new query algorithms/data-structures for new types of queries\n DBMSs that \"tune\" themselves\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What is future of database ?",
  "answer": " Extend the relational model ...\n add new data types and query ops for new applications deal with uncertainty/inaccuracy/approximation in data\n Replace the relational model ...\n object-oriented DBMS ... OO programming with persistent objects\n XML DBMS ... all data stored as XML documents, new query model\n application-effective data model (e.g. (key,value) pairs)\n Performance ...\n new query algorithms/data-structures for new types of queries\n DBMSs that \"tune\" themselves\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What does future of database mean ?",
  "answer": " Extend the relational model ...\n add new data types and query ops for new applications deal with uncertainty/inaccuracy/approximation in data\n Replace the relational model ...\n object-oriented DBMS ... OO programming with persistent objects\n XML DBMS ... all data stored as XML documents, new query model\n application-effective data model (e.g. (key,value) pairs)\n Performance ...\n new query algorithms/data-structures for new types of queries\n DBMSs that \"tune\" themselves\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Tell me something about future of database ?",
  "answer": " Extend the relational model ...\n add new data types and query ops for new applications deal with uncertainty/inaccuracy/approximation in data\n Replace the relational model ...\n object-oriented DBMS ... OO programming with persistent objects\n XML DBMS ... all data stored as XML documents, new query model\n application-effective data model (e.g. (key,value) pairs)\n Performance ...\n new query algorithms/data-structures for new types of queries\n DBMSs that \"tune\" themselves\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Explain future of database ?",
  "answer": " Extend the relational model ...\n add new data types and query ops for new applications deal with uncertainty/inaccuracy/approximation in data\n Replace the relational model ...\n object-oriented DBMS ... OO programming with persistent objects\n XML DBMS ... all data stored as XML documents, new query model\n application-effective data model (e.g. (key,value) pairs)\n Performance ...\n new query algorithms/data-structures for new types of queries\n DBMSs that \"tune\" themselves\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Can you tell me about future of database ?",
  "answer": " Extend the relational model ...\n add new data types and query ops for new applications deal with uncertainty/inaccuracy/approximation in data\n Replace the relational model ...\n object-oriented DBMS ... OO programming with persistent objects\n XML DBMS ... all data stored as XML documents, new query model\n application-effective data model (e.g. (key,value) pairs)\n Performance ...\n new query algorithms/data-structures for new types of queries\n DBMSs that \"tune\" themselves\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What do you know about future of database ?",
  "answer": " Extend the relational model ...\n add new data types and query ops for new applications deal with uncertainty/inaccuracy/approximation in data\n Replace the relational model ...\n object-oriented DBMS ... OO programming with persistent objects\n XML DBMS ... all data stored as XML documents, new query model\n application-effective data model (e.g. (key,value) pairs)\n Performance ...\n new query algorithms/data-structures for new types of queries\n DBMSs that \"tune\" themselves\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What can you tell me about future of database ?",
  "answer": " Extend the relational model ...\n add new data types and query ops for new applications deal with uncertainty/inaccuracy/approximation in data\n Replace the relational model ...\n object-oriented DBMS ... OO programming with persistent objects\n XML DBMS ... all data stored as XML documents, new query model\n application-effective data model (e.g. (key,value) pairs)\n Performance ...\n new query algorithms/data-structures for new types of queries\n DBMSs that \"tune\" themselves\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "I want to know aboutfuture of database",
  "answer": " Extend the relational model ...\n add new data types and query ops for new applications deal with uncertainty/inaccuracy/approximation in data\n Replace the relational model ...\n object-oriented DBMS ... OO programming with persistent objects\n XML DBMS ... all data stored as XML documents, new query model\n application-effective data model (e.g. (key,value) pairs)\n Performance ...\n new query algorithms/data-structures for new types of queries\n DBMSs that \"tune\" themselves\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Do you have information about future of database ?",
  "answer": " Extend the relational model ...\n add new data types and query ops for new applications deal with uncertainty/inaccuracy/approximation in data\n Replace the relational model ...\n object-oriented DBMS ... OO programming with persistent objects\n XML DBMS ... all data stored as XML documents, new query model\n application-effective data model (e.g. (key,value) pairs)\n Performance ...\n new query algorithms/data-structures for new types of queries\n DBMSs that \"tune\" themselves\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Do you know future of database ?",
  "answer": " Extend the relational model ...\n add new data types and query ops for new applications deal with uncertainty/inaccuracy/approximation in data\n Replace the relational model ...\n object-oriented DBMS ... OO programming with persistent objects\n XML DBMS ... all data stored as XML documents, new query model\n application-effective data model (e.g. (key,value) pairs)\n Performance ...\n new query algorithms/data-structures for new types of queries\n DBMSs that \"tune\" themselves\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "what about future of database ?",
  "answer": " Extend the relational model ...\n add new data types and query ops for new applications deal with uncertainty/inaccuracy/approximation in data\n Replace the relational model ...\n object-oriented DBMS ... OO programming with persistent objects\n XML DBMS ... all data stored as XML documents, new query model\n application-effective data model (e.g. (key,value) pairs)\n Performance ...\n new query algorithms/data-structures for new types of queries\n DBMSs that \"tune\" themselves\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "How to overcome (some of) these limitations?",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What is future of database ?",
  "answer": "An overview of the possibilities:\n \"classical\" RDBMS   (e.g. PostgreSQL, Oracle, SQLite)\n parallel DBMS   (e.g. XPRS)\n distributed DBMS   (e.g. Cohera)\n deductive databases   (e.g. Datalog)\n temporal databases   (e.g. MariaDB)\n column stores   (e.g. C-Store?)\n object-oriented DBMS   (e.g. ObjectStore)\n key-value stores   (e.g. Redis, DynamoDB)\n wide column stores   (e.g. Cassandra, Scylla, HBase)\n graph databases   (e.g. Neo4J, Datastax)\n document stores   (e.g. MongoDB, Couchbase)\n search engines   (e.g. Google, Solr)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What is future of database ?",
  "answer": "An overview of the possibilities:\n \"classical\" RDBMS   (e.g. PostgreSQL, Oracle, SQLite)\n parallel DBMS   (e.g. XPRS)\n distributed DBMS   (e.g. Cohera)\n deductive databases   (e.g. Datalog)\n temporal databases   (e.g. MariaDB)\n column stores   (e.g. C-Store?)\n object-oriented DBMS   (e.g. ObjectStore)\n key-value stores   (e.g. Redis, DynamoDB)\n wide column stores   (e.g. Cassandra, Scylla, HBase)\n graph databases   (e.g. Neo4J, Datastax)\n document stores   (e.g. MongoDB, Couchbase)\n search engines   (e.g. Google, Solr)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What does future of database mean ?",
  "answer": "An overview of the possibilities:\n \"classical\" RDBMS   (e.g. PostgreSQL, Oracle, SQLite)\n parallel DBMS   (e.g. XPRS)\n distributed DBMS   (e.g. Cohera)\n deductive databases   (e.g. Datalog)\n temporal databases   (e.g. MariaDB)\n column stores   (e.g. C-Store?)\n object-oriented DBMS   (e.g. ObjectStore)\n key-value stores   (e.g. Redis, DynamoDB)\n wide column stores   (e.g. Cassandra, Scylla, HBase)\n graph databases   (e.g. Neo4J, Datastax)\n document stores   (e.g. MongoDB, Couchbase)\n search engines   (e.g. Google, Solr)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Tell me something about future of database ?",
  "answer": "An overview of the possibilities:\n \"classical\" RDBMS   (e.g. PostgreSQL, Oracle, SQLite)\n parallel DBMS   (e.g. XPRS)\n distributed DBMS   (e.g. Cohera)\n deductive databases   (e.g. Datalog)\n temporal databases   (e.g. MariaDB)\n column stores   (e.g. C-Store?)\n object-oriented DBMS   (e.g. ObjectStore)\n key-value stores   (e.g. Redis, DynamoDB)\n wide column stores   (e.g. Cassandra, Scylla, HBase)\n graph databases   (e.g. Neo4J, Datastax)\n document stores   (e.g. MongoDB, Couchbase)\n search engines   (e.g. Google, Solr)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Explain future of database ?",
  "answer": "An overview of the possibilities:\n \"classical\" RDBMS   (e.g. PostgreSQL, Oracle, SQLite)\n parallel DBMS   (e.g. XPRS)\n distributed DBMS   (e.g. Cohera)\n deductive databases   (e.g. Datalog)\n temporal databases   (e.g. MariaDB)\n column stores   (e.g. C-Store?)\n object-oriented DBMS   (e.g. ObjectStore)\n key-value stores   (e.g. Redis, DynamoDB)\n wide column stores   (e.g. Cassandra, Scylla, HBase)\n graph databases   (e.g. Neo4J, Datastax)\n document stores   (e.g. MongoDB, Couchbase)\n search engines   (e.g. Google, Solr)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Can you tell me about future of database ?",
  "answer": "An overview of the possibilities:\n \"classical\" RDBMS   (e.g. PostgreSQL, Oracle, SQLite)\n parallel DBMS   (e.g. XPRS)\n distributed DBMS   (e.g. Cohera)\n deductive databases   (e.g. Datalog)\n temporal databases   (e.g. MariaDB)\n column stores   (e.g. C-Store?)\n object-oriented DBMS   (e.g. ObjectStore)\n key-value stores   (e.g. Redis, DynamoDB)\n wide column stores   (e.g. Cassandra, Scylla, HBase)\n graph databases   (e.g. Neo4J, Datastax)\n document stores   (e.g. MongoDB, Couchbase)\n search engines   (e.g. Google, Solr)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What do you know about future of database ?",
  "answer": "An overview of the possibilities:\n \"classical\" RDBMS   (e.g. PostgreSQL, Oracle, SQLite)\n parallel DBMS   (e.g. XPRS)\n distributed DBMS   (e.g. Cohera)\n deductive databases   (e.g. Datalog)\n temporal databases   (e.g. MariaDB)\n column stores   (e.g. C-Store?)\n object-oriented DBMS   (e.g. ObjectStore)\n key-value stores   (e.g. Redis, DynamoDB)\n wide column stores   (e.g. Cassandra, Scylla, HBase)\n graph databases   (e.g. Neo4J, Datastax)\n document stores   (e.g. MongoDB, Couchbase)\n search engines   (e.g. Google, Solr)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What can you tell me about future of database ?",
  "answer": "An overview of the possibilities:\n \"classical\" RDBMS   (e.g. PostgreSQL, Oracle, SQLite)\n parallel DBMS   (e.g. XPRS)\n distributed DBMS   (e.g. Cohera)\n deductive databases   (e.g. Datalog)\n temporal databases   (e.g. MariaDB)\n column stores   (e.g. C-Store?)\n object-oriented DBMS   (e.g. ObjectStore)\n key-value stores   (e.g. Redis, DynamoDB)\n wide column stores   (e.g. Cassandra, Scylla, HBase)\n graph databases   (e.g. Neo4J, Datastax)\n document stores   (e.g. MongoDB, Couchbase)\n search engines   (e.g. Google, Solr)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "I want to know aboutfuture of database",
  "answer": "An overview of the possibilities:\n \"classical\" RDBMS   (e.g. PostgreSQL, Oracle, SQLite)\n parallel DBMS   (e.g. XPRS)\n distributed DBMS   (e.g. Cohera)\n deductive databases   (e.g. Datalog)\n temporal databases   (e.g. MariaDB)\n column stores   (e.g. C-Store?)\n object-oriented DBMS   (e.g. ObjectStore)\n key-value stores   (e.g. Redis, DynamoDB)\n wide column stores   (e.g. Cassandra, Scylla, HBase)\n graph databases   (e.g. Neo4J, Datastax)\n document stores   (e.g. MongoDB, Couchbase)\n search engines   (e.g. Google, Solr)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Do you have information about future of database ?",
  "answer": "An overview of the possibilities:\n \"classical\" RDBMS   (e.g. PostgreSQL, Oracle, SQLite)\n parallel DBMS   (e.g. XPRS)\n distributed DBMS   (e.g. Cohera)\n deductive databases   (e.g. Datalog)\n temporal databases   (e.g. MariaDB)\n column stores   (e.g. C-Store?)\n object-oriented DBMS   (e.g. ObjectStore)\n key-value stores   (e.g. Redis, DynamoDB)\n wide column stores   (e.g. Cassandra, Scylla, HBase)\n graph databases   (e.g. Neo4J, Datastax)\n document stores   (e.g. MongoDB, Couchbase)\n search engines   (e.g. Google, Solr)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "Do you know future of database ?",
  "answer": "An overview of the possibilities:\n \"classical\" RDBMS   (e.g. PostgreSQL, Oracle, SQLite)\n parallel DBMS   (e.g. XPRS)\n distributed DBMS   (e.g. Cohera)\n deductive databases   (e.g. Datalog)\n temporal databases   (e.g. MariaDB)\n column stores   (e.g. C-Store?)\n object-oriented DBMS   (e.g. ObjectStore)\n key-value stores   (e.g. Redis, DynamoDB)\n wide column stores   (e.g. Cassandra, Scylla, HBase)\n graph databases   (e.g. Neo4J, Datastax)\n document stores   (e.g. MongoDB, Couchbase)\n search engines   (e.g. Google, Solr)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "what about future of database ?",
  "answer": "An overview of the possibilities:\n \"classical\" RDBMS   (e.g. PostgreSQL, Oracle, SQLite)\n parallel DBMS   (e.g. XPRS)\n distributed DBMS   (e.g. Cohera)\n deductive databases   (e.g. Datalog)\n temporal databases   (e.g. MariaDB)\n column stores   (e.g. C-Store?)\n object-oriented DBMS   (e.g. ObjectStore)\n key-value stores   (e.g. Redis, DynamoDB)\n wide column stores   (e.g. Cassandra, Scylla, HBase)\n graph databases   (e.g. Neo4J, Datastax)\n document stores   (e.g. MongoDB, Couchbase)\n search engines   (e.g. Google, Solr)\n",
  "intent": "description",
  "key_words": [
   "future",
   "of",
   "database"
  ]
 },
 {
  "question": "What is big data ?",
  "answer": "Some modern applications have massive data sets (e.g. Google)\n far too large to store on a single machine/RDBMS\n query demands far too high even if could store in DBMS\n Approach to dealing with such data\n distribute data over large collection of nodes  (also, redundancy)\n provide computational mechanisms for distributing computation\n Often this data does not need full relational selection\n represent data via (key,value) pairs\n unique keys can be used for addressing data\n values can be large objects (e.g. web pages, images, ...)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "What is big data ?",
  "answer": "Some modern applications have massive data sets (e.g. Google)\n far too large to store on a single machine/RDBMS\n query demands far too high even if could store in DBMS\n Approach to dealing with such data\n distribute data over large collection of nodes  (also, redundancy)\n provide computational mechanisms for distributing computation\n Often this data does not need full relational selection\n represent data via (key,value) pairs\n unique keys can be used for addressing data\n values can be large objects (e.g. web pages, images, ...)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "What does big data mean ?",
  "answer": "Some modern applications have massive data sets (e.g. Google)\n far too large to store on a single machine/RDBMS\n query demands far too high even if could store in DBMS\n Approach to dealing with such data\n distribute data over large collection of nodes  (also, redundancy)\n provide computational mechanisms for distributing computation\n Often this data does not need full relational selection\n represent data via (key,value) pairs\n unique keys can be used for addressing data\n values can be large objects (e.g. web pages, images, ...)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "Tell me something about big data ?",
  "answer": "Some modern applications have massive data sets (e.g. Google)\n far too large to store on a single machine/RDBMS\n query demands far too high even if could store in DBMS\n Approach to dealing with such data\n distribute data over large collection of nodes  (also, redundancy)\n provide computational mechanisms for distributing computation\n Often this data does not need full relational selection\n represent data via (key,value) pairs\n unique keys can be used for addressing data\n values can be large objects (e.g. web pages, images, ...)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "Explain big data ?",
  "answer": "Some modern applications have massive data sets (e.g. Google)\n far too large to store on a single machine/RDBMS\n query demands far too high even if could store in DBMS\n Approach to dealing with such data\n distribute data over large collection of nodes  (also, redundancy)\n provide computational mechanisms for distributing computation\n Often this data does not need full relational selection\n represent data via (key,value) pairs\n unique keys can be used for addressing data\n values can be large objects (e.g. web pages, images, ...)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "Can you tell me about big data ?",
  "answer": "Some modern applications have massive data sets (e.g. Google)\n far too large to store on a single machine/RDBMS\n query demands far too high even if could store in DBMS\n Approach to dealing with such data\n distribute data over large collection of nodes  (also, redundancy)\n provide computational mechanisms for distributing computation\n Often this data does not need full relational selection\n represent data via (key,value) pairs\n unique keys can be used for addressing data\n values can be large objects (e.g. web pages, images, ...)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "What do you know about big data ?",
  "answer": "Some modern applications have massive data sets (e.g. Google)\n far too large to store on a single machine/RDBMS\n query demands far too high even if could store in DBMS\n Approach to dealing with such data\n distribute data over large collection of nodes  (also, redundancy)\n provide computational mechanisms for distributing computation\n Often this data does not need full relational selection\n represent data via (key,value) pairs\n unique keys can be used for addressing data\n values can be large objects (e.g. web pages, images, ...)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "What can you tell me about big data ?",
  "answer": "Some modern applications have massive data sets (e.g. Google)\n far too large to store on a single machine/RDBMS\n query demands far too high even if could store in DBMS\n Approach to dealing with such data\n distribute data over large collection of nodes  (also, redundancy)\n provide computational mechanisms for distributing computation\n Often this data does not need full relational selection\n represent data via (key,value) pairs\n unique keys can be used for addressing data\n values can be large objects (e.g. web pages, images, ...)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "I want to know aboutbig data",
  "answer": "Some modern applications have massive data sets (e.g. Google)\n far too large to store on a single machine/RDBMS\n query demands far too high even if could store in DBMS\n Approach to dealing with such data\n distribute data over large collection of nodes  (also, redundancy)\n provide computational mechanisms for distributing computation\n Often this data does not need full relational selection\n represent data via (key,value) pairs\n unique keys can be used for addressing data\n values can be large objects (e.g. web pages, images, ...)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "Do you have information about big data ?",
  "answer": "Some modern applications have massive data sets (e.g. Google)\n far too large to store on a single machine/RDBMS\n query demands far too high even if could store in DBMS\n Approach to dealing with such data\n distribute data over large collection of nodes  (also, redundancy)\n provide computational mechanisms for distributing computation\n Often this data does not need full relational selection\n represent data via (key,value) pairs\n unique keys can be used for addressing data\n values can be large objects (e.g. web pages, images, ...)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "Do you know big data ?",
  "answer": "Some modern applications have massive data sets (e.g. Google)\n far too large to store on a single machine/RDBMS\n query demands far too high even if could store in DBMS\n Approach to dealing with such data\n distribute data over large collection of nodes  (also, redundancy)\n provide computational mechanisms for distributing computation\n Often this data does not need full relational selection\n represent data via (key,value) pairs\n unique keys can be used for addressing data\n values can be large objects (e.g. web pages, images, ...)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "what about big data ?",
  "answer": "Some modern applications have massive data sets (e.g. Google)\n far too large to store on a single machine/RDBMS\n query demands far too high even if could store in DBMS\n Approach to dealing with such data\n distribute data over large collection of nodes  (also, redundancy)\n provide computational mechanisms for distributing computation\n Often this data does not need full relational selection\n represent data via (key,value) pairs\n unique keys can be used for addressing data\n values can be large objects (e.g. web pages, images, ...)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "What is big data ?",
  "answer": "Popular computational approach to Big Data: map/reduce\n suitable for widely-distributed, very-large data\n allows parallel computation on such data to be easily specified\n distribute (map) parts of computation across network\n compute in parallel (possibly with further mapping)\n merge (reduce) multiple results for delivery to requestor\n Some Big Data proponents see no future need for SQL/relational ...\n depends on application (e.g. hard integrity vs eventual consistency)\n Humour: Parody of noSQL fans   (strong language warning)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "What is big data ?",
  "answer": "Popular computational approach to Big Data: map/reduce\n suitable for widely-distributed, very-large data\n allows parallel computation on such data to be easily specified\n distribute (map) parts of computation across network\n compute in parallel (possibly with further mapping)\n merge (reduce) multiple results for delivery to requestor\n Some Big Data proponents see no future need for SQL/relational ...\n depends on application (e.g. hard integrity vs eventual consistency)\n Humour: Parody of noSQL fans   (strong language warning)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "What does big data mean ?",
  "answer": "Popular computational approach to Big Data: map/reduce\n suitable for widely-distributed, very-large data\n allows parallel computation on such data to be easily specified\n distribute (map) parts of computation across network\n compute in parallel (possibly with further mapping)\n merge (reduce) multiple results for delivery to requestor\n Some Big Data proponents see no future need for SQL/relational ...\n depends on application (e.g. hard integrity vs eventual consistency)\n Humour: Parody of noSQL fans   (strong language warning)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "Tell me something about big data ?",
  "answer": "Popular computational approach to Big Data: map/reduce\n suitable for widely-distributed, very-large data\n allows parallel computation on such data to be easily specified\n distribute (map) parts of computation across network\n compute in parallel (possibly with further mapping)\n merge (reduce) multiple results for delivery to requestor\n Some Big Data proponents see no future need for SQL/relational ...\n depends on application (e.g. hard integrity vs eventual consistency)\n Humour: Parody of noSQL fans   (strong language warning)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "Explain big data ?",
  "answer": "Popular computational approach to Big Data: map/reduce\n suitable for widely-distributed, very-large data\n allows parallel computation on such data to be easily specified\n distribute (map) parts of computation across network\n compute in parallel (possibly with further mapping)\n merge (reduce) multiple results for delivery to requestor\n Some Big Data proponents see no future need for SQL/relational ...\n depends on application (e.g. hard integrity vs eventual consistency)\n Humour: Parody of noSQL fans   (strong language warning)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "Can you tell me about big data ?",
  "answer": "Popular computational approach to Big Data: map/reduce\n suitable for widely-distributed, very-large data\n allows parallel computation on such data to be easily specified\n distribute (map) parts of computation across network\n compute in parallel (possibly with further mapping)\n merge (reduce) multiple results for delivery to requestor\n Some Big Data proponents see no future need for SQL/relational ...\n depends on application (e.g. hard integrity vs eventual consistency)\n Humour: Parody of noSQL fans   (strong language warning)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "What do you know about big data ?",
  "answer": "Popular computational approach to Big Data: map/reduce\n suitable for widely-distributed, very-large data\n allows parallel computation on such data to be easily specified\n distribute (map) parts of computation across network\n compute in parallel (possibly with further mapping)\n merge (reduce) multiple results for delivery to requestor\n Some Big Data proponents see no future need for SQL/relational ...\n depends on application (e.g. hard integrity vs eventual consistency)\n Humour: Parody of noSQL fans   (strong language warning)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "What can you tell me about big data ?",
  "answer": "Popular computational approach to Big Data: map/reduce\n suitable for widely-distributed, very-large data\n allows parallel computation on such data to be easily specified\n distribute (map) parts of computation across network\n compute in parallel (possibly with further mapping)\n merge (reduce) multiple results for delivery to requestor\n Some Big Data proponents see no future need for SQL/relational ...\n depends on application (e.g. hard integrity vs eventual consistency)\n Humour: Parody of noSQL fans   (strong language warning)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "I want to know aboutbig data",
  "answer": "Popular computational approach to Big Data: map/reduce\n suitable for widely-distributed, very-large data\n allows parallel computation on such data to be easily specified\n distribute (map) parts of computation across network\n compute in parallel (possibly with further mapping)\n merge (reduce) multiple results for delivery to requestor\n Some Big Data proponents see no future need for SQL/relational ...\n depends on application (e.g. hard integrity vs eventual consistency)\n Humour: Parody of noSQL fans   (strong language warning)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "Do you have information about big data ?",
  "answer": "Popular computational approach to Big Data: map/reduce\n suitable for widely-distributed, very-large data\n allows parallel computation on such data to be easily specified\n distribute (map) parts of computation across network\n compute in parallel (possibly with further mapping)\n merge (reduce) multiple results for delivery to requestor\n Some Big Data proponents see no future need for SQL/relational ...\n depends on application (e.g. hard integrity vs eventual consistency)\n Humour: Parody of noSQL fans   (strong language warning)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "Do you know big data ?",
  "answer": "Popular computational approach to Big Data: map/reduce\n suitable for widely-distributed, very-large data\n allows parallel computation on such data to be easily specified\n distribute (map) parts of computation across network\n compute in parallel (possibly with further mapping)\n merge (reduce) multiple results for delivery to requestor\n Some Big Data proponents see no future need for SQL/relational ...\n depends on application (e.g. hard integrity vs eventual consistency)\n Humour: Parody of noSQL fans   (strong language warning)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "what about big data ?",
  "answer": "Popular computational approach to Big Data: map/reduce\n suitable for widely-distributed, very-large data\n allows parallel computation on such data to be easily specified\n distribute (map) parts of computation across network\n compute in parallel (possibly with further mapping)\n merge (reduce) multiple results for delivery to requestor\n Some Big Data proponents see no future need for SQL/relational ...\n depends on application (e.g. hard integrity vs eventual consistency)\n Humour: Parody of noSQL fans   (strong language warning)\n",
  "intent": "description",
  "key_words": [
   "big",
   "data"
  ]
 },
 {
  "question": "What is information retrieval ?",
  "answer": "DBMSs generally do precise matching (although like/regexps)\n Information retrieval systems do approximate matching.\n E.g. documents containing these words (Google, etc.)\n Also introduces notion of \"quality\" of matching (e.g. tuple T1 is a better match than tuple T2)\n Quality also implies ranking of results.\n Much activity in incorporating IR ideas into DBMS context.\n Goal: support database exploration better.\n",
  "intent": "description",
  "key_words": [
   "information",
   "retrieval"
  ]
 },
 {
  "question": "What is information retrieval ?",
  "answer": "DBMSs generally do precise matching (although like/regexps)\n Information retrieval systems do approximate matching.\n E.g. documents containing these words (Google, etc.)\n Also introduces notion of \"quality\" of matching (e.g. tuple T1 is a better match than tuple T2)\n Quality also implies ranking of results.\n Much activity in incorporating IR ideas into DBMS context.\n Goal: support database exploration better.\n",
  "intent": "description",
  "key_words": [
   "information",
   "retrieval"
  ]
 },
 {
  "question": "What does information retrieval mean ?",
  "answer": "DBMSs generally do precise matching (although like/regexps)\n Information retrieval systems do approximate matching.\n E.g. documents containing these words (Google, etc.)\n Also introduces notion of \"quality\" of matching (e.g. tuple T1 is a better match than tuple T2)\n Quality also implies ranking of results.\n Much activity in incorporating IR ideas into DBMS context.\n Goal: support database exploration better.\n",
  "intent": "description",
  "key_words": [
   "information",
   "retrieval"
  ]
 },
 {
  "question": "Tell me something about information retrieval ?",
  "answer": "DBMSs generally do precise matching (although like/regexps)\n Information retrieval systems do approximate matching.\n E.g. documents containing these words (Google, etc.)\n Also introduces notion of \"quality\" of matching (e.g. tuple T1 is a better match than tuple T2)\n Quality also implies ranking of results.\n Much activity in incorporating IR ideas into DBMS context.\n Goal: support database exploration better.\n",
  "intent": "description",
  "key_words": [
   "information",
   "retrieval"
  ]
 },
 {
  "question": "Explain information retrieval ?",
  "answer": "DBMSs generally do precise matching (although like/regexps)\n Information retrieval systems do approximate matching.\n E.g. documents containing these words (Google, etc.)\n Also introduces notion of \"quality\" of matching (e.g. tuple T1 is a better match than tuple T2)\n Quality also implies ranking of results.\n Much activity in incorporating IR ideas into DBMS context.\n Goal: support database exploration better.\n",
  "intent": "description",
  "key_words": [
   "information",
   "retrieval"
  ]
 },
 {
  "question": "Can you tell me about information retrieval ?",
  "answer": "DBMSs generally do precise matching (although like/regexps)\n Information retrieval systems do approximate matching.\n E.g. documents containing these words (Google, etc.)\n Also introduces notion of \"quality\" of matching (e.g. tuple T1 is a better match than tuple T2)\n Quality also implies ranking of results.\n Much activity in incorporating IR ideas into DBMS context.\n Goal: support database exploration better.\n",
  "intent": "description",
  "key_words": [
   "information",
   "retrieval"
  ]
 },
 {
  "question": "What do you know about information retrieval ?",
  "answer": "DBMSs generally do precise matching (although like/regexps)\n Information retrieval systems do approximate matching.\n E.g. documents containing these words (Google, etc.)\n Also introduces notion of \"quality\" of matching (e.g. tuple T1 is a better match than tuple T2)\n Quality also implies ranking of results.\n Much activity in incorporating IR ideas into DBMS context.\n Goal: support database exploration better.\n",
  "intent": "description",
  "key_words": [
   "information",
   "retrieval"
  ]
 },
 {
  "question": "What can you tell me about information retrieval ?",
  "answer": "DBMSs generally do precise matching (although like/regexps)\n Information retrieval systems do approximate matching.\n E.g. documents containing these words (Google, etc.)\n Also introduces notion of \"quality\" of matching (e.g. tuple T1 is a better match than tuple T2)\n Quality also implies ranking of results.\n Much activity in incorporating IR ideas into DBMS context.\n Goal: support database exploration better.\n",
  "intent": "description",
  "key_words": [
   "information",
   "retrieval"
  ]
 },
 {
  "question": "I want to know aboutinformation retrieval",
  "answer": "DBMSs generally do precise matching (although like/regexps)\n Information retrieval systems do approximate matching.\n E.g. documents containing these words (Google, etc.)\n Also introduces notion of \"quality\" of matching (e.g. tuple T1 is a better match than tuple T2)\n Quality also implies ranking of results.\n Much activity in incorporating IR ideas into DBMS context.\n Goal: support database exploration better.\n",
  "intent": "description",
  "key_words": [
   "information",
   "retrieval"
  ]
 },
 {
  "question": "Do you have information about information retrieval ?",
  "answer": "DBMSs generally do precise matching (although like/regexps)\n Information retrieval systems do approximate matching.\n E.g. documents containing these words (Google, etc.)\n Also introduces notion of \"quality\" of matching (e.g. tuple T1 is a better match than tuple T2)\n Quality also implies ranking of results.\n Much activity in incorporating IR ideas into DBMS context.\n Goal: support database exploration better.\n",
  "intent": "description",
  "key_words": [
   "information",
   "retrieval"
  ]
 },
 {
  "question": "Do you know information retrieval ?",
  "answer": "DBMSs generally do precise matching (although like/regexps)\n Information retrieval systems do approximate matching.\n E.g. documents containing these words (Google, etc.)\n Also introduces notion of \"quality\" of matching (e.g. tuple T1 is a better match than tuple T2)\n Quality also implies ranking of results.\n Much activity in incorporating IR ideas into DBMS context.\n Goal: support database exploration better.\n",
  "intent": "description",
  "key_words": [
   "information",
   "retrieval"
  ]
 },
 {
  "question": "what about information retrieval ?",
  "answer": "DBMSs generally do precise matching (although like/regexps)\n Information retrieval systems do approximate matching.\n E.g. documents containing these words (Google, etc.)\n Also introduces notion of \"quality\" of matching (e.g. tuple T1 is a better match than tuple T2)\n Quality also implies ranking of results.\n Much activity in incorporating IR ideas into DBMS context.\n Goal: support database exploration better.\n",
  "intent": "description",
  "key_words": [
   "information",
   "retrieval"
  ]
 },
 {
  "question": "What is multimedia data ?",
  "answer": "Data which does not fit the \"tabular model\":\n image, video, music, text, ... (and combinations of these)\n Research problems:\n how to specify queries on such data? (image1 \u2245 image2)\n how to \"display\" results? (synchronize components)\n Solutions to the first problem typically:\n extend notions of \"matching\"/indexes for querying\n require sophisticated methods for capturing data features\n Sample query: find other songs like this one?\n",
  "intent": "description",
  "key_words": [
   "multimedia",
   "data"
  ]
 },
 {
  "question": "What is multimedia data ?",
  "answer": "Data which does not fit the \"tabular model\":\n image, video, music, text, ... (and combinations of these)\n Research problems:\n how to specify queries on such data? (image1 \u2245 image2)\n how to \"display\" results? (synchronize components)\n Solutions to the first problem typically:\n extend notions of \"matching\"/indexes for querying\n require sophisticated methods for capturing data features\n Sample query: find other songs like this one?\n",
  "intent": "description",
  "key_words": [
   "multimedia",
   "data"
  ]
 },
 {
  "question": "What does multimedia data mean ?",
  "answer": "Data which does not fit the \"tabular model\":\n image, video, music, text, ... (and combinations of these)\n Research problems:\n how to specify queries on such data? (image1 \u2245 image2)\n how to \"display\" results? (synchronize components)\n Solutions to the first problem typically:\n extend notions of \"matching\"/indexes for querying\n require sophisticated methods for capturing data features\n Sample query: find other songs like this one?\n",
  "intent": "description",
  "key_words": [
   "multimedia",
   "data"
  ]
 },
 {
  "question": "Tell me something about multimedia data ?",
  "answer": "Data which does not fit the \"tabular model\":\n image, video, music, text, ... (and combinations of these)\n Research problems:\n how to specify queries on such data? (image1 \u2245 image2)\n how to \"display\" results? (synchronize components)\n Solutions to the first problem typically:\n extend notions of \"matching\"/indexes for querying\n require sophisticated methods for capturing data features\n Sample query: find other songs like this one?\n",
  "intent": "description",
  "key_words": [
   "multimedia",
   "data"
  ]
 },
 {
  "question": "Explain multimedia data ?",
  "answer": "Data which does not fit the \"tabular model\":\n image, video, music, text, ... (and combinations of these)\n Research problems:\n how to specify queries on such data? (image1 \u2245 image2)\n how to \"display\" results? (synchronize components)\n Solutions to the first problem typically:\n extend notions of \"matching\"/indexes for querying\n require sophisticated methods for capturing data features\n Sample query: find other songs like this one?\n",
  "intent": "description",
  "key_words": [
   "multimedia",
   "data"
  ]
 },
 {
  "question": "Can you tell me about multimedia data ?",
  "answer": "Data which does not fit the \"tabular model\":\n image, video, music, text, ... (and combinations of these)\n Research problems:\n how to specify queries on such data? (image1 \u2245 image2)\n how to \"display\" results? (synchronize components)\n Solutions to the first problem typically:\n extend notions of \"matching\"/indexes for querying\n require sophisticated methods for capturing data features\n Sample query: find other songs like this one?\n",
  "intent": "description",
  "key_words": [
   "multimedia",
   "data"
  ]
 },
 {
  "question": "What do you know about multimedia data ?",
  "answer": "Data which does not fit the \"tabular model\":\n image, video, music, text, ... (and combinations of these)\n Research problems:\n how to specify queries on such data? (image1 \u2245 image2)\n how to \"display\" results? (synchronize components)\n Solutions to the first problem typically:\n extend notions of \"matching\"/indexes for querying\n require sophisticated methods for capturing data features\n Sample query: find other songs like this one?\n",
  "intent": "description",
  "key_words": [
   "multimedia",
   "data"
  ]
 },
 {
  "question": "What can you tell me about multimedia data ?",
  "answer": "Data which does not fit the \"tabular model\":\n image, video, music, text, ... (and combinations of these)\n Research problems:\n how to specify queries on such data? (image1 \u2245 image2)\n how to \"display\" results? (synchronize components)\n Solutions to the first problem typically:\n extend notions of \"matching\"/indexes for querying\n require sophisticated methods for capturing data features\n Sample query: find other songs like this one?\n",
  "intent": "description",
  "key_words": [
   "multimedia",
   "data"
  ]
 },
 {
  "question": "I want to know aboutmultimedia data",
  "answer": "Data which does not fit the \"tabular model\":\n image, video, music, text, ... (and combinations of these)\n Research problems:\n how to specify queries on such data? (image1 \u2245 image2)\n how to \"display\" results? (synchronize components)\n Solutions to the first problem typically:\n extend notions of \"matching\"/indexes for querying\n require sophisticated methods for capturing data features\n Sample query: find other songs like this one?\n",
  "intent": "description",
  "key_words": [
   "multimedia",
   "data"
  ]
 },
 {
  "question": "Do you have information about multimedia data ?",
  "answer": "Data which does not fit the \"tabular model\":\n image, video, music, text, ... (and combinations of these)\n Research problems:\n how to specify queries on such data? (image1 \u2245 image2)\n how to \"display\" results? (synchronize components)\n Solutions to the first problem typically:\n extend notions of \"matching\"/indexes for querying\n require sophisticated methods for capturing data features\n Sample query: find other songs like this one?\n",
  "intent": "description",
  "key_words": [
   "multimedia",
   "data"
  ]
 },
 {
  "question": "Do you know multimedia data ?",
  "answer": "Data which does not fit the \"tabular model\":\n image, video, music, text, ... (and combinations of these)\n Research problems:\n how to specify queries on such data? (image1 \u2245 image2)\n how to \"display\" results? (synchronize components)\n Solutions to the first problem typically:\n extend notions of \"matching\"/indexes for querying\n require sophisticated methods for capturing data features\n Sample query: find other songs like this one?\n",
  "intent": "description",
  "key_words": [
   "multimedia",
   "data"
  ]
 },
 {
  "question": "what about multimedia data ?",
  "answer": "Data which does not fit the \"tabular model\":\n image, video, music, text, ... (and combinations of these)\n Research problems:\n how to specify queries on such data? (image1 \u2245 image2)\n how to \"display\" results? (synchronize components)\n Solutions to the first problem typically:\n extend notions of \"matching\"/indexes for querying\n require sophisticated methods for capturing data features\n Sample query: find other songs like this one?\n",
  "intent": "description",
  "key_words": [
   "multimedia",
   "data"
  ]
 },
 {
  "question": "What is uncertainty ?",
  "answer": "Multimedia/IR introduces approximate matching.\n In some contexts, we have approximate/uncertain data.\n E.g. witness statements in a crime-fighting database\n http://www.youtube.com/watch?v=b2F-DItXtZs\n \"I think the getaway car was red ... or maybe orange ...\"\n \"I am 75% sure that John carried out the crime\"\n Work by Jennifer Widom at Stanford on the Trio system\n extends the relational model (ULDB)\n extends the query language (TriQL)\n",
  "intent": "description",
  "key_words": [
   "uncertainty"
  ]
 },
 {
  "question": "What is uncertainty ?",
  "answer": "Multimedia/IR introduces approximate matching.\n In some contexts, we have approximate/uncertain data.\n E.g. witness statements in a crime-fighting database\n http://www.youtube.com/watch?v=b2F-DItXtZs\n \"I think the getaway car was red ... or maybe orange ...\"\n \"I am 75% sure that John carried out the crime\"\n Work by Jennifer Widom at Stanford on the Trio system\n extends the relational model (ULDB)\n extends the query language (TriQL)\n",
  "intent": "description",
  "key_words": [
   "uncertainty"
  ]
 },
 {
  "question": "What does uncertainty mean ?",
  "answer": "Multimedia/IR introduces approximate matching.\n In some contexts, we have approximate/uncertain data.\n E.g. witness statements in a crime-fighting database\n http://www.youtube.com/watch?v=b2F-DItXtZs\n \"I think the getaway car was red ... or maybe orange ...\"\n \"I am 75% sure that John carried out the crime\"\n Work by Jennifer Widom at Stanford on the Trio system\n extends the relational model (ULDB)\n extends the query language (TriQL)\n",
  "intent": "description",
  "key_words": [
   "uncertainty"
  ]
 },
 {
  "question": "Tell me something about uncertainty ?",
  "answer": "Multimedia/IR introduces approximate matching.\n In some contexts, we have approximate/uncertain data.\n E.g. witness statements in a crime-fighting database\n http://www.youtube.com/watch?v=b2F-DItXtZs\n \"I think the getaway car was red ... or maybe orange ...\"\n \"I am 75% sure that John carried out the crime\"\n Work by Jennifer Widom at Stanford on the Trio system\n extends the relational model (ULDB)\n extends the query language (TriQL)\n",
  "intent": "description",
  "key_words": [
   "uncertainty"
  ]
 },
 {
  "question": "Explain uncertainty ?",
  "answer": "Multimedia/IR introduces approximate matching.\n In some contexts, we have approximate/uncertain data.\n E.g. witness statements in a crime-fighting database\n http://www.youtube.com/watch?v=b2F-DItXtZs\n \"I think the getaway car was red ... or maybe orange ...\"\n \"I am 75% sure that John carried out the crime\"\n Work by Jennifer Widom at Stanford on the Trio system\n extends the relational model (ULDB)\n extends the query language (TriQL)\n",
  "intent": "description",
  "key_words": [
   "uncertainty"
  ]
 },
 {
  "question": "Can you tell me about uncertainty ?",
  "answer": "Multimedia/IR introduces approximate matching.\n In some contexts, we have approximate/uncertain data.\n E.g. witness statements in a crime-fighting database\n http://www.youtube.com/watch?v=b2F-DItXtZs\n \"I think the getaway car was red ... or maybe orange ...\"\n \"I am 75% sure that John carried out the crime\"\n Work by Jennifer Widom at Stanford on the Trio system\n extends the relational model (ULDB)\n extends the query language (TriQL)\n",
  "intent": "description",
  "key_words": [
   "uncertainty"
  ]
 },
 {
  "question": "What do you know about uncertainty ?",
  "answer": "Multimedia/IR introduces approximate matching.\n In some contexts, we have approximate/uncertain data.\n E.g. witness statements in a crime-fighting database\n http://www.youtube.com/watch?v=b2F-DItXtZs\n \"I think the getaway car was red ... or maybe orange ...\"\n \"I am 75% sure that John carried out the crime\"\n Work by Jennifer Widom at Stanford on the Trio system\n extends the relational model (ULDB)\n extends the query language (TriQL)\n",
  "intent": "description",
  "key_words": [
   "uncertainty"
  ]
 },
 {
  "question": "What can you tell me about uncertainty ?",
  "answer": "Multimedia/IR introduces approximate matching.\n In some contexts, we have approximate/uncertain data.\n E.g. witness statements in a crime-fighting database\n http://www.youtube.com/watch?v=b2F-DItXtZs\n \"I think the getaway car was red ... or maybe orange ...\"\n \"I am 75% sure that John carried out the crime\"\n Work by Jennifer Widom at Stanford on the Trio system\n extends the relational model (ULDB)\n extends the query language (TriQL)\n",
  "intent": "description",
  "key_words": [
   "uncertainty"
  ]
 },
 {
  "question": "I want to know aboutuncertainty",
  "answer": "Multimedia/IR introduces approximate matching.\n In some contexts, we have approximate/uncertain data.\n E.g. witness statements in a crime-fighting database\n http://www.youtube.com/watch?v=b2F-DItXtZs\n \"I think the getaway car was red ... or maybe orange ...\"\n \"I am 75% sure that John carried out the crime\"\n Work by Jennifer Widom at Stanford on the Trio system\n extends the relational model (ULDB)\n extends the query language (TriQL)\n",
  "intent": "description",
  "key_words": [
   "uncertainty"
  ]
 },
 {
  "question": "Do you have information about uncertainty ?",
  "answer": "Multimedia/IR introduces approximate matching.\n In some contexts, we have approximate/uncertain data.\n E.g. witness statements in a crime-fighting database\n http://www.youtube.com/watch?v=b2F-DItXtZs\n \"I think the getaway car was red ... or maybe orange ...\"\n \"I am 75% sure that John carried out the crime\"\n Work by Jennifer Widom at Stanford on the Trio system\n extends the relational model (ULDB)\n extends the query language (TriQL)\n",
  "intent": "description",
  "key_words": [
   "uncertainty"
  ]
 },
 {
  "question": "Do you know uncertainty ?",
  "answer": "Multimedia/IR introduces approximate matching.\n In some contexts, we have approximate/uncertain data.\n E.g. witness statements in a crime-fighting database\n http://www.youtube.com/watch?v=b2F-DItXtZs\n \"I think the getaway car was red ... or maybe orange ...\"\n \"I am 75% sure that John carried out the crime\"\n Work by Jennifer Widom at Stanford on the Trio system\n extends the relational model (ULDB)\n extends the query language (TriQL)\n",
  "intent": "description",
  "key_words": [
   "uncertainty"
  ]
 },
 {
  "question": "what about uncertainty ?",
  "answer": "Multimedia/IR introduces approximate matching.\n In some contexts, we have approximate/uncertain data.\n E.g. witness statements in a crime-fighting database\n http://www.youtube.com/watch?v=b2F-DItXtZs\n \"I think the getaway car was red ... or maybe orange ...\"\n \"I am 75% sure that John carried out the crime\"\n Work by Jennifer Widom at Stanford on the Trio system\n extends the relational model (ULDB)\n extends the query language (TriQL)\n",
  "intent": "description",
  "key_words": [
   "uncertainty"
  ]
 },
 {
  "question": "What is stream management system ?",
  "answer": "Makes one addition to the relational model\n stream = infinite sequence of tuples, arriving one-at-a-time\n Applications: news feeds, telecomms, monitoring web usage, ...\n RDBMSs: run a variety of queries on (relatively) fixed data StreamDBs: run fixed queries on changing data (stream)\n Approaches:\n window = relation formed from a stream via a rule\n stream data type = build new stream-specific operations\n",
  "intent": "description",
  "key_words": [
   "stream",
   "management",
   "system"
  ]
 },
 {
  "question": "What is stream management system ?",
  "answer": "Makes one addition to the relational model\n stream = infinite sequence of tuples, arriving one-at-a-time\n Applications: news feeds, telecomms, monitoring web usage, ...\n RDBMSs: run a variety of queries on (relatively) fixed data StreamDBs: run fixed queries on changing data (stream)\n Approaches:\n window = relation formed from a stream via a rule\n stream data type = build new stream-specific operations\n",
  "intent": "description",
  "key_words": [
   "stream",
   "management",
   "system"
  ]
 },
 {
  "question": "What does stream management system mean ?",
  "answer": "Makes one addition to the relational model\n stream = infinite sequence of tuples, arriving one-at-a-time\n Applications: news feeds, telecomms, monitoring web usage, ...\n RDBMSs: run a variety of queries on (relatively) fixed data StreamDBs: run fixed queries on changing data (stream)\n Approaches:\n window = relation formed from a stream via a rule\n stream data type = build new stream-specific operations\n",
  "intent": "description",
  "key_words": [
   "stream",
   "management",
   "system"
  ]
 },
 {
  "question": "Tell me something about stream management system ?",
  "answer": "Makes one addition to the relational model\n stream = infinite sequence of tuples, arriving one-at-a-time\n Applications: news feeds, telecomms, monitoring web usage, ...\n RDBMSs: run a variety of queries on (relatively) fixed data StreamDBs: run fixed queries on changing data (stream)\n Approaches:\n window = relation formed from a stream via a rule\n stream data type = build new stream-specific operations\n",
  "intent": "description",
  "key_words": [
   "stream",
   "management",
   "system"
  ]
 },
 {
  "question": "Explain stream management system ?",
  "answer": "Makes one addition to the relational model\n stream = infinite sequence of tuples, arriving one-at-a-time\n Applications: news feeds, telecomms, monitoring web usage, ...\n RDBMSs: run a variety of queries on (relatively) fixed data StreamDBs: run fixed queries on changing data (stream)\n Approaches:\n window = relation formed from a stream via a rule\n stream data type = build new stream-specific operations\n",
  "intent": "description",
  "key_words": [
   "stream",
   "management",
   "system"
  ]
 },
 {
  "question": "Can you tell me about stream management system ?",
  "answer": "Makes one addition to the relational model\n stream = infinite sequence of tuples, arriving one-at-a-time\n Applications: news feeds, telecomms, monitoring web usage, ...\n RDBMSs: run a variety of queries on (relatively) fixed data StreamDBs: run fixed queries on changing data (stream)\n Approaches:\n window = relation formed from a stream via a rule\n stream data type = build new stream-specific operations\n",
  "intent": "description",
  "key_words": [
   "stream",
   "management",
   "system"
  ]
 },
 {
  "question": "What do you know about stream management system ?",
  "answer": "Makes one addition to the relational model\n stream = infinite sequence of tuples, arriving one-at-a-time\n Applications: news feeds, telecomms, monitoring web usage, ...\n RDBMSs: run a variety of queries on (relatively) fixed data StreamDBs: run fixed queries on changing data (stream)\n Approaches:\n window = relation formed from a stream via a rule\n stream data type = build new stream-specific operations\n",
  "intent": "description",
  "key_words": [
   "stream",
   "management",
   "system"
  ]
 },
 {
  "question": "What can you tell me about stream management system ?",
  "answer": "Makes one addition to the relational model\n stream = infinite sequence of tuples, arriving one-at-a-time\n Applications: news feeds, telecomms, monitoring web usage, ...\n RDBMSs: run a variety of queries on (relatively) fixed data StreamDBs: run fixed queries on changing data (stream)\n Approaches:\n window = relation formed from a stream via a rule\n stream data type = build new stream-specific operations\n",
  "intent": "description",
  "key_words": [
   "stream",
   "management",
   "system"
  ]
 },
 {
  "question": "I want to know aboutstream management system",
  "answer": "Makes one addition to the relational model\n stream = infinite sequence of tuples, arriving one-at-a-time\n Applications: news feeds, telecomms, monitoring web usage, ...\n RDBMSs: run a variety of queries on (relatively) fixed data StreamDBs: run fixed queries on changing data (stream)\n Approaches:\n window = relation formed from a stream via a rule\n stream data type = build new stream-specific operations\n",
  "intent": "description",
  "key_words": [
   "stream",
   "management",
   "system"
  ]
 },
 {
  "question": "Do you have information about stream management system ?",
  "answer": "Makes one addition to the relational model\n stream = infinite sequence of tuples, arriving one-at-a-time\n Applications: news feeds, telecomms, monitoring web usage, ...\n RDBMSs: run a variety of queries on (relatively) fixed data StreamDBs: run fixed queries on changing data (stream)\n Approaches:\n window = relation formed from a stream via a rule\n stream data type = build new stream-specific operations\n",
  "intent": "description",
  "key_words": [
   "stream",
   "management",
   "system"
  ]
 },
 {
  "question": "Do you know stream management system ?",
  "answer": "Makes one addition to the relational model\n stream = infinite sequence of tuples, arriving one-at-a-time\n Applications: news feeds, telecomms, monitoring web usage, ...\n RDBMSs: run a variety of queries on (relatively) fixed data StreamDBs: run fixed queries on changing data (stream)\n Approaches:\n window = relation formed from a stream via a rule\n stream data type = build new stream-specific operations\n",
  "intent": "description",
  "key_words": [
   "stream",
   "management",
   "system"
  ]
 },
 {
  "question": "what about stream management system ?",
  "answer": "Makes one addition to the relational model\n stream = infinite sequence of tuples, arriving one-at-a-time\n Applications: news feeds, telecomms, monitoring web usage, ...\n RDBMSs: run a variety of queries on (relatively) fixed data StreamDBs: run fixed queries on changing data (stream)\n Approaches:\n window = relation formed from a stream via a rule\n stream data type = build new stream-specific operations\n",
  "intent": "description",
  "key_words": [
   "stream",
   "management",
   "system"
  ]
 },
 {
  "question": "What is graph data ?",
  "answer": "Uses graphs rather than tables as basic data structure tool.\n Applications: complex data representation, via \"flexible\" objects, e.g. XML\n Graph nature of data changes query model considerably.\n (e.g. Xquery language, high-level like SQL, but different operators, etc.)\n Implementing graphs in RDBMSs is often inefficient.\n Research problem: query processing for XML data.\n",
  "intent": "description",
  "key_words": [
   "graph",
   "data"
  ]
 },
 {
  "question": "What is graph data ?",
  "answer": "Uses graphs rather than tables as basic data structure tool.\n Applications: complex data representation, via \"flexible\" objects, e.g. XML\n Graph nature of data changes query model considerably.\n (e.g. Xquery language, high-level like SQL, but different operators, etc.)\n Implementing graphs in RDBMSs is often inefficient.\n Research problem: query processing for XML data.\n",
  "intent": "description",
  "key_words": [
   "graph",
   "data"
  ]
 },
 {
  "question": "What does graph data mean ?",
  "answer": "Uses graphs rather than tables as basic data structure tool.\n Applications: complex data representation, via \"flexible\" objects, e.g. XML\n Graph nature of data changes query model considerably.\n (e.g. Xquery language, high-level like SQL, but different operators, etc.)\n Implementing graphs in RDBMSs is often inefficient.\n Research problem: query processing for XML data.\n",
  "intent": "description",
  "key_words": [
   "graph",
   "data"
  ]
 },
 {
  "question": "Tell me something about graph data ?",
  "answer": "Uses graphs rather than tables as basic data structure tool.\n Applications: complex data representation, via \"flexible\" objects, e.g. XML\n Graph nature of data changes query model considerably.\n (e.g. Xquery language, high-level like SQL, but different operators, etc.)\n Implementing graphs in RDBMSs is often inefficient.\n Research problem: query processing for XML data.\n",
  "intent": "description",
  "key_words": [
   "graph",
   "data"
  ]
 },
 {
  "question": "Explain graph data ?",
  "answer": "Uses graphs rather than tables as basic data structure tool.\n Applications: complex data representation, via \"flexible\" objects, e.g. XML\n Graph nature of data changes query model considerably.\n (e.g. Xquery language, high-level like SQL, but different operators, etc.)\n Implementing graphs in RDBMSs is often inefficient.\n Research problem: query processing for XML data.\n",
  "intent": "description",
  "key_words": [
   "graph",
   "data"
  ]
 },
 {
  "question": "Can you tell me about graph data ?",
  "answer": "Uses graphs rather than tables as basic data structure tool.\n Applications: complex data representation, via \"flexible\" objects, e.g. XML\n Graph nature of data changes query model considerably.\n (e.g. Xquery language, high-level like SQL, but different operators, etc.)\n Implementing graphs in RDBMSs is often inefficient.\n Research problem: query processing for XML data.\n",
  "intent": "description",
  "key_words": [
   "graph",
   "data"
  ]
 },
 {
  "question": "What do you know about graph data ?",
  "answer": "Uses graphs rather than tables as basic data structure tool.\n Applications: complex data representation, via \"flexible\" objects, e.g. XML\n Graph nature of data changes query model considerably.\n (e.g. Xquery language, high-level like SQL, but different operators, etc.)\n Implementing graphs in RDBMSs is often inefficient.\n Research problem: query processing for XML data.\n",
  "intent": "description",
  "key_words": [
   "graph",
   "data"
  ]
 },
 {
  "question": "What can you tell me about graph data ?",
  "answer": "Uses graphs rather than tables as basic data structure tool.\n Applications: complex data representation, via \"flexible\" objects, e.g. XML\n Graph nature of data changes query model considerably.\n (e.g. Xquery language, high-level like SQL, but different operators, etc.)\n Implementing graphs in RDBMSs is often inefficient.\n Research problem: query processing for XML data.\n",
  "intent": "description",
  "key_words": [
   "graph",
   "data"
  ]
 },
 {
  "question": "I want to know aboutgraph data",
  "answer": "Uses graphs rather than tables as basic data structure tool.\n Applications: complex data representation, via \"flexible\" objects, e.g. XML\n Graph nature of data changes query model considerably.\n (e.g. Xquery language, high-level like SQL, but different operators, etc.)\n Implementing graphs in RDBMSs is often inefficient.\n Research problem: query processing for XML data.\n",
  "intent": "description",
  "key_words": [
   "graph",
   "data"
  ]
 },
 {
  "question": "Do you have information about graph data ?",
  "answer": "Uses graphs rather than tables as basic data structure tool.\n Applications: complex data representation, via \"flexible\" objects, e.g. XML\n Graph nature of data changes query model considerably.\n (e.g. Xquery language, high-level like SQL, but different operators, etc.)\n Implementing graphs in RDBMSs is often inefficient.\n Research problem: query processing for XML data.\n",
  "intent": "description",
  "key_words": [
   "graph",
   "data"
  ]
 },
 {
  "question": "Do you know graph data ?",
  "answer": "Uses graphs rather than tables as basic data structure tool.\n Applications: complex data representation, via \"flexible\" objects, e.g. XML\n Graph nature of data changes query model considerably.\n (e.g. Xquery language, high-level like SQL, but different operators, etc.)\n Implementing graphs in RDBMSs is often inefficient.\n Research problem: query processing for XML data.\n",
  "intent": "description",
  "key_words": [
   "graph",
   "data"
  ]
 },
 {
  "question": "what about graph data ?",
  "answer": "Uses graphs rather than tables as basic data structure tool.\n Applications: complex data representation, via \"flexible\" objects, e.g. XML\n Graph nature of data changes query model considerably.\n (e.g. Xquery language, high-level like SQL, but different operators, etc.)\n Implementing graphs in RDBMSs is often inefficient.\n Research problem: query processing for XML data.\n",
  "intent": "description",
  "key_words": [
   "graph",
   "data"
  ]
 },
 {
  "question": "What is dispersed database ?",
  "answer": "Characteristics of dispersed databases:\n very large numbers of small processing nodes\n data is distributed/shared among nodes\n Applications: environmental monitoring devices, \"intelligent dust\", ...\n Research issues:\n query/search strategies (how to organise query processing)\n distribution of data (trade-off between centralised and diffused)\n Less extreme versions of this already exist:\n grid and cloud computing\n database management for mobile devices\n Parallelism in Databases\n",
  "intent": "description",
  "key_words": [
   "dispersed",
   "database"
  ]
 },
 {
  "question": "What is dispersed database ?",
  "answer": "Characteristics of dispersed databases:\n very large numbers of small processing nodes\n data is distributed/shared among nodes\n Applications: environmental monitoring devices, \"intelligent dust\", ...\n Research issues:\n query/search strategies (how to organise query processing)\n distribution of data (trade-off between centralised and diffused)\n Less extreme versions of this already exist:\n grid and cloud computing\n database management for mobile devices\n Parallelism in Databases\n",
  "intent": "description",
  "key_words": [
   "dispersed",
   "database"
  ]
 },
 {
  "question": "What does dispersed database mean ?",
  "answer": "Characteristics of dispersed databases:\n very large numbers of small processing nodes\n data is distributed/shared among nodes\n Applications: environmental monitoring devices, \"intelligent dust\", ...\n Research issues:\n query/search strategies (how to organise query processing)\n distribution of data (trade-off between centralised and diffused)\n Less extreme versions of this already exist:\n grid and cloud computing\n database management for mobile devices\n Parallelism in Databases\n",
  "intent": "description",
  "key_words": [
   "dispersed",
   "database"
  ]
 },
 {
  "question": "Tell me something about dispersed database ?",
  "answer": "Characteristics of dispersed databases:\n very large numbers of small processing nodes\n data is distributed/shared among nodes\n Applications: environmental monitoring devices, \"intelligent dust\", ...\n Research issues:\n query/search strategies (how to organise query processing)\n distribution of data (trade-off between centralised and diffused)\n Less extreme versions of this already exist:\n grid and cloud computing\n database management for mobile devices\n Parallelism in Databases\n",
  "intent": "description",
  "key_words": [
   "dispersed",
   "database"
  ]
 },
 {
  "question": "Explain dispersed database ?",
  "answer": "Characteristics of dispersed databases:\n very large numbers of small processing nodes\n data is distributed/shared among nodes\n Applications: environmental monitoring devices, \"intelligent dust\", ...\n Research issues:\n query/search strategies (how to organise query processing)\n distribution of data (trade-off between centralised and diffused)\n Less extreme versions of this already exist:\n grid and cloud computing\n database management for mobile devices\n Parallelism in Databases\n",
  "intent": "description",
  "key_words": [
   "dispersed",
   "database"
  ]
 },
 {
  "question": "Can you tell me about dispersed database ?",
  "answer": "Characteristics of dispersed databases:\n very large numbers of small processing nodes\n data is distributed/shared among nodes\n Applications: environmental monitoring devices, \"intelligent dust\", ...\n Research issues:\n query/search strategies (how to organise query processing)\n distribution of data (trade-off between centralised and diffused)\n Less extreme versions of this already exist:\n grid and cloud computing\n database management for mobile devices\n Parallelism in Databases\n",
  "intent": "description",
  "key_words": [
   "dispersed",
   "database"
  ]
 },
 {
  "question": "What do you know about dispersed database ?",
  "answer": "Characteristics of dispersed databases:\n very large numbers of small processing nodes\n data is distributed/shared among nodes\n Applications: environmental monitoring devices, \"intelligent dust\", ...\n Research issues:\n query/search strategies (how to organise query processing)\n distribution of data (trade-off between centralised and diffused)\n Less extreme versions of this already exist:\n grid and cloud computing\n database management for mobile devices\n Parallelism in Databases\n",
  "intent": "description",
  "key_words": [
   "dispersed",
   "database"
  ]
 },
 {
  "question": "What can you tell me about dispersed database ?",
  "answer": "Characteristics of dispersed databases:\n very large numbers of small processing nodes\n data is distributed/shared among nodes\n Applications: environmental monitoring devices, \"intelligent dust\", ...\n Research issues:\n query/search strategies (how to organise query processing)\n distribution of data (trade-off between centralised and diffused)\n Less extreme versions of this already exist:\n grid and cloud computing\n database management for mobile devices\n Parallelism in Databases\n",
  "intent": "description",
  "key_words": [
   "dispersed",
   "database"
  ]
 },
 {
  "question": "I want to know aboutdispersed database",
  "answer": "Characteristics of dispersed databases:\n very large numbers of small processing nodes\n data is distributed/shared among nodes\n Applications: environmental monitoring devices, \"intelligent dust\", ...\n Research issues:\n query/search strategies (how to organise query processing)\n distribution of data (trade-off between centralised and diffused)\n Less extreme versions of this already exist:\n grid and cloud computing\n database management for mobile devices\n Parallelism in Databases\n",
  "intent": "description",
  "key_words": [
   "dispersed",
   "database"
  ]
 },
 {
  "question": "Do you have information about dispersed database ?",
  "answer": "Characteristics of dispersed databases:\n very large numbers of small processing nodes\n data is distributed/shared among nodes\n Applications: environmental monitoring devices, \"intelligent dust\", ...\n Research issues:\n query/search strategies (how to organise query processing)\n distribution of data (trade-off between centralised and diffused)\n Less extreme versions of this already exist:\n grid and cloud computing\n database management for mobile devices\n Parallelism in Databases\n",
  "intent": "description",
  "key_words": [
   "dispersed",
   "database"
  ]
 },
 {
  "question": "Do you know dispersed database ?",
  "answer": "Characteristics of dispersed databases:\n very large numbers of small processing nodes\n data is distributed/shared among nodes\n Applications: environmental monitoring devices, \"intelligent dust\", ...\n Research issues:\n query/search strategies (how to organise query processing)\n distribution of data (trade-off between centralised and diffused)\n Less extreme versions of this already exist:\n grid and cloud computing\n database management for mobile devices\n Parallelism in Databases\n",
  "intent": "description",
  "key_words": [
   "dispersed",
   "database"
  ]
 },
 {
  "question": "what about dispersed database ?",
  "answer": "Characteristics of dispersed databases:\n very large numbers of small processing nodes\n data is distributed/shared among nodes\n Applications: environmental monitoring devices, \"intelligent dust\", ...\n Research issues:\n query/search strategies (how to organise query processing)\n distribution of data (trade-off between centralised and diffused)\n Less extreme versions of this already exist:\n grid and cloud computing\n database management for mobile devices\n Parallelism in Databases\n",
  "intent": "description",
  "key_words": [
   "dispersed",
   "database"
  ]
 },
 {
  "question": "What is parallel dbms ?",
  "answer": "The discussion so far has revolved around systems\n with a single or small number of processors\n accessing a single memory space\n getting data from one or more disk devices\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What is parallel dbms ?",
  "answer": "The discussion so far has revolved around systems\n with a single or small number of processors\n accessing a single memory space\n getting data from one or more disk devices\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What does parallel dbms mean ?",
  "answer": "The discussion so far has revolved around systems\n with a single or small number of processors\n accessing a single memory space\n getting data from one or more disk devices\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Tell me something about parallel dbms ?",
  "answer": "The discussion so far has revolved around systems\n with a single or small number of processors\n accessing a single memory space\n getting data from one or more disk devices\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Explain parallel dbms ?",
  "answer": "The discussion so far has revolved around systems\n with a single or small number of processors\n accessing a single memory space\n getting data from one or more disk devices\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Can you tell me about parallel dbms ?",
  "answer": "The discussion so far has revolved around systems\n with a single or small number of processors\n accessing a single memory space\n getting data from one or more disk devices\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What do you know about parallel dbms ?",
  "answer": "The discussion so far has revolved around systems\n with a single or small number of processors\n accessing a single memory space\n getting data from one or more disk devices\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What can you tell me about parallel dbms ?",
  "answer": "The discussion so far has revolved around systems\n with a single or small number of processors\n accessing a single memory space\n getting data from one or more disk devices\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "I want to know aboutparallel dbms",
  "answer": "The discussion so far has revolved around systems\n with a single or small number of processors\n accessing a single memory space\n getting data from one or more disk devices\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Do you have information about parallel dbms ?",
  "answer": "The discussion so far has revolved around systems\n with a single or small number of processors\n accessing a single memory space\n getting data from one or more disk devices\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Do you know parallel dbms ?",
  "answer": "The discussion so far has revolved around systems\n with a single or small number of processors\n accessing a single memory space\n getting data from one or more disk devices\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "what about parallel dbms ?",
  "answer": "The discussion so far has revolved around systems\n with a single or small number of processors\n accessing a single memory space\n getting data from one or more disk devices\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What is parallel dbms ?",
  "answer": "Throughput!",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What is parallel dbms ?",
  "answer": "Throughput!",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What does parallel dbms mean ?",
  "answer": "Throughput!",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Tell me something about parallel dbms ?",
  "answer": "Throughput!",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Explain parallel dbms ?",
  "answer": "Throughput!",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Can you tell me about parallel dbms ?",
  "answer": "Throughput!",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What do you know about parallel dbms ?",
  "answer": "Throughput!",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What can you tell me about parallel dbms ?",
  "answer": "Throughput!",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "I want to know aboutparallel dbms",
  "answer": "Throughput!",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Do you have information about parallel dbms ?",
  "answer": "Throughput!",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Do you know parallel dbms ?",
  "answer": "Throughput!",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "what about parallel dbms ?",
  "answer": "Throughput!",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Why parallelism?",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What is parallel dbms ?",
  "answer": "DBMSs lend are a success story in application of parallelism\n can process many data elements (tuples) at the same time\n can create pipelines of query evaluation steps\n don't require special hardware\n can hide paralleism within the query evaluator\n application programmers don't need to change habits\n Compare this with effort to do parallel programming.\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What is parallel dbms ?",
  "answer": "DBMSs lend are a success story in application of parallelism\n can process many data elements (tuples) at the same time\n can create pipelines of query evaluation steps\n don't require special hardware\n can hide paralleism within the query evaluator\n application programmers don't need to change habits\n Compare this with effort to do parallel programming.\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What does parallel dbms mean ?",
  "answer": "DBMSs lend are a success story in application of parallelism\n can process many data elements (tuples) at the same time\n can create pipelines of query evaluation steps\n don't require special hardware\n can hide paralleism within the query evaluator\n application programmers don't need to change habits\n Compare this with effort to do parallel programming.\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Tell me something about parallel dbms ?",
  "answer": "DBMSs lend are a success story in application of parallelism\n can process many data elements (tuples) at the same time\n can create pipelines of query evaluation steps\n don't require special hardware\n can hide paralleism within the query evaluator\n application programmers don't need to change habits\n Compare this with effort to do parallel programming.\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Explain parallel dbms ?",
  "answer": "DBMSs lend are a success story in application of parallelism\n can process many data elements (tuples) at the same time\n can create pipelines of query evaluation steps\n don't require special hardware\n can hide paralleism within the query evaluator\n application programmers don't need to change habits\n Compare this with effort to do parallel programming.\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Can you tell me about parallel dbms ?",
  "answer": "DBMSs lend are a success story in application of parallelism\n can process many data elements (tuples) at the same time\n can create pipelines of query evaluation steps\n don't require special hardware\n can hide paralleism within the query evaluator\n application programmers don't need to change habits\n Compare this with effort to do parallel programming.\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What do you know about parallel dbms ?",
  "answer": "DBMSs lend are a success story in application of parallelism\n can process many data elements (tuples) at the same time\n can create pipelines of query evaluation steps\n don't require special hardware\n can hide paralleism within the query evaluator\n application programmers don't need to change habits\n Compare this with effort to do parallel programming.\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What can you tell me about parallel dbms ?",
  "answer": "DBMSs lend are a success story in application of parallelism\n can process many data elements (tuples) at the same time\n can create pipelines of query evaluation steps\n don't require special hardware\n can hide paralleism within the query evaluator\n application programmers don't need to change habits\n Compare this with effort to do parallel programming.\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "I want to know aboutparallel dbms",
  "answer": "DBMSs lend are a success story in application of parallelism\n can process many data elements (tuples) at the same time\n can create pipelines of query evaluation steps\n don't require special hardware\n can hide paralleism within the query evaluator\n application programmers don't need to change habits\n Compare this with effort to do parallel programming.\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Do you have information about parallel dbms ?",
  "answer": "DBMSs lend are a success story in application of parallelism\n can process many data elements (tuples) at the same time\n can create pipelines of query evaluation steps\n don't require special hardware\n can hide paralleism within the query evaluator\n application programmers don't need to change habits\n Compare this with effort to do parallel programming.\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "Do you know parallel dbms ?",
  "answer": "DBMSs lend are a success story in application of parallelism\n can process many data elements (tuples) at the same time\n can create pipelines of query evaluation steps\n don't require special hardware\n can hide paralleism within the query evaluator\n application programmers don't need to change habits\n Compare this with effort to do parallel programming.\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "what about parallel dbms ?",
  "answer": "DBMSs lend are a success story in application of parallelism\n can process many data elements (tuples) at the same time\n can create pipelines of query evaluation steps\n don't require special hardware\n can hide paralleism within the query evaluator\n application programmers don't need to change habits\n Compare this with effort to do parallel programming.\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "dbms"
  ]
 },
 {
  "question": "What is parallel architecture ?",
  "answer": "Types:   shared memory,   shared disk,   shared nothing\n Example shared-nothing architecture:\n Typically same room/LAN   (data transfer cost ~ 100's of \u03bcsecs .. msecs)\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "architecture"
  ]
 },
 {
  "question": "What is parallel architecture ?",
  "answer": "Types:   shared memory,   shared disk,   shared nothing\n Example shared-nothing architecture:\n Typically same room/LAN   (data transfer cost ~ 100's of \u03bcsecs .. msecs)\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "architecture"
  ]
 },
 {
  "question": "What does parallel architecture mean ?",
  "answer": "Types:   shared memory,   shared disk,   shared nothing\n Example shared-nothing architecture:\n Typically same room/LAN   (data transfer cost ~ 100's of \u03bcsecs .. msecs)\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "architecture"
  ]
 },
 {
  "question": "Tell me something about parallel architecture ?",
  "answer": "Types:   shared memory,   shared disk,   shared nothing\n Example shared-nothing architecture:\n Typically same room/LAN   (data transfer cost ~ 100's of \u03bcsecs .. msecs)\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "architecture"
  ]
 },
 {
  "question": "Explain parallel architecture ?",
  "answer": "Types:   shared memory,   shared disk,   shared nothing\n Example shared-nothing architecture:\n Typically same room/LAN   (data transfer cost ~ 100's of \u03bcsecs .. msecs)\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "architecture"
  ]
 },
 {
  "question": "Can you tell me about parallel architecture ?",
  "answer": "Types:   shared memory,   shared disk,   shared nothing\n Example shared-nothing architecture:\n Typically same room/LAN   (data transfer cost ~ 100's of \u03bcsecs .. msecs)\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "architecture"
  ]
 },
 {
  "question": "What do you know about parallel architecture ?",
  "answer": "Types:   shared memory,   shared disk,   shared nothing\n Example shared-nothing architecture:\n Typically same room/LAN   (data transfer cost ~ 100's of \u03bcsecs .. msecs)\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "architecture"
  ]
 },
 {
  "question": "What can you tell me about parallel architecture ?",
  "answer": "Types:   shared memory,   shared disk,   shared nothing\n Example shared-nothing architecture:\n Typically same room/LAN   (data transfer cost ~ 100's of \u03bcsecs .. msecs)\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "architecture"
  ]
 },
 {
  "question": "I want to know aboutparallel architecture",
  "answer": "Types:   shared memory,   shared disk,   shared nothing\n Example shared-nothing architecture:\n Typically same room/LAN   (data transfer cost ~ 100's of \u03bcsecs .. msecs)\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "architecture"
  ]
 },
 {
  "question": "Do you have information about parallel architecture ?",
  "answer": "Types:   shared memory,   shared disk,   shared nothing\n Example shared-nothing architecture:\n Typically same room/LAN   (data transfer cost ~ 100's of \u03bcsecs .. msecs)\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "architecture"
  ]
 },
 {
  "question": "Do you know parallel architecture ?",
  "answer": "Types:   shared memory,   shared disk,   shared nothing\n Example shared-nothing architecture:\n Typically same room/LAN   (data transfer cost ~ 100's of \u03bcsecs .. msecs)\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "architecture"
  ]
 },
 {
  "question": "what about parallel architecture ?",
  "answer": "Types:   shared memory,   shared disk,   shared nothing\n Example shared-nothing architecture:\n Typically same room/LAN   (data transfer cost ~ 100's of \u03bcsecs .. msecs)\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "architecture"
  ]
 },
 {
  "question": "What is distributed architecture ?",
  "answer": "Distributed architectures are ...\n effectively shared-nothing, on a global-scale network\n Typically on the Internet   (data transfer cost ~ secs)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "architecture"
  ]
 },
 {
  "question": "What is distributed architecture ?",
  "answer": "Distributed architectures are ...\n effectively shared-nothing, on a global-scale network\n Typically on the Internet   (data transfer cost ~ secs)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "architecture"
  ]
 },
 {
  "question": "What does distributed architecture mean ?",
  "answer": "Distributed architectures are ...\n effectively shared-nothing, on a global-scale network\n Typically on the Internet   (data transfer cost ~ secs)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "architecture"
  ]
 },
 {
  "question": "Tell me something about distributed architecture ?",
  "answer": "Distributed architectures are ...\n effectively shared-nothing, on a global-scale network\n Typically on the Internet   (data transfer cost ~ secs)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "architecture"
  ]
 },
 {
  "question": "Explain distributed architecture ?",
  "answer": "Distributed architectures are ...\n effectively shared-nothing, on a global-scale network\n Typically on the Internet   (data transfer cost ~ secs)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "architecture"
  ]
 },
 {
  "question": "Can you tell me about distributed architecture ?",
  "answer": "Distributed architectures are ...\n effectively shared-nothing, on a global-scale network\n Typically on the Internet   (data transfer cost ~ secs)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "architecture"
  ]
 },
 {
  "question": "What do you know about distributed architecture ?",
  "answer": "Distributed architectures are ...\n effectively shared-nothing, on a global-scale network\n Typically on the Internet   (data transfer cost ~ secs)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "architecture"
  ]
 },
 {
  "question": "What can you tell me about distributed architecture ?",
  "answer": "Distributed architectures are ...\n effectively shared-nothing, on a global-scale network\n Typically on the Internet   (data transfer cost ~ secs)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "architecture"
  ]
 },
 {
  "question": "I want to know aboutdistributed architecture",
  "answer": "Distributed architectures are ...\n effectively shared-nothing, on a global-scale network\n Typically on the Internet   (data transfer cost ~ secs)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "architecture"
  ]
 },
 {
  "question": "Do you have information about distributed architecture ?",
  "answer": "Distributed architectures are ...\n effectively shared-nothing, on a global-scale network\n Typically on the Internet   (data transfer cost ~ secs)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "architecture"
  ]
 },
 {
  "question": "Do you know distributed architecture ?",
  "answer": "Distributed architectures are ...\n effectively shared-nothing, on a global-scale network\n Typically on the Internet   (data transfer cost ~ secs)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "architecture"
  ]
 },
 {
  "question": "what about distributed architecture ?",
  "answer": "Distributed architectures are ...\n effectively shared-nothing, on a global-scale network\n Typically on the Internet   (data transfer cost ~ secs)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "architecture"
  ]
 },
 {
  "question": "What is parallel database (pdbs) ?",
  "answer": "Parallel databases provide various forms of parallelism ...\n process parallelism can speed up query evaluation\n processor parallelism can assist in speeding up memory ops\n processor parallelism introduces cache coherence issues\n disk parallelism can assist in overcoming latency\n disk parallelism can be used to improve fault-tolerance (RAID)\n one limiting factor is congestion on communication bus\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "What is parallel database (pdbs) ?",
  "answer": "Parallel databases provide various forms of parallelism ...\n process parallelism can speed up query evaluation\n processor parallelism can assist in speeding up memory ops\n processor parallelism introduces cache coherence issues\n disk parallelism can assist in overcoming latency\n disk parallelism can be used to improve fault-tolerance (RAID)\n one limiting factor is congestion on communication bus\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "What does parallel database (pdbs) mean ?",
  "answer": "Parallel databases provide various forms of parallelism ...\n process parallelism can speed up query evaluation\n processor parallelism can assist in speeding up memory ops\n processor parallelism introduces cache coherence issues\n disk parallelism can assist in overcoming latency\n disk parallelism can be used to improve fault-tolerance (RAID)\n one limiting factor is congestion on communication bus\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "Tell me something about parallel database (pdbs) ?",
  "answer": "Parallel databases provide various forms of parallelism ...\n process parallelism can speed up query evaluation\n processor parallelism can assist in speeding up memory ops\n processor parallelism introduces cache coherence issues\n disk parallelism can assist in overcoming latency\n disk parallelism can be used to improve fault-tolerance (RAID)\n one limiting factor is congestion on communication bus\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "Explain parallel database (pdbs) ?",
  "answer": "Parallel databases provide various forms of parallelism ...\n process parallelism can speed up query evaluation\n processor parallelism can assist in speeding up memory ops\n processor parallelism introduces cache coherence issues\n disk parallelism can assist in overcoming latency\n disk parallelism can be used to improve fault-tolerance (RAID)\n one limiting factor is congestion on communication bus\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "Can you tell me about parallel database (pdbs) ?",
  "answer": "Parallel databases provide various forms of parallelism ...\n process parallelism can speed up query evaluation\n processor parallelism can assist in speeding up memory ops\n processor parallelism introduces cache coherence issues\n disk parallelism can assist in overcoming latency\n disk parallelism can be used to improve fault-tolerance (RAID)\n one limiting factor is congestion on communication bus\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "What do you know about parallel database (pdbs) ?",
  "answer": "Parallel databases provide various forms of parallelism ...\n process parallelism can speed up query evaluation\n processor parallelism can assist in speeding up memory ops\n processor parallelism introduces cache coherence issues\n disk parallelism can assist in overcoming latency\n disk parallelism can be used to improve fault-tolerance (RAID)\n one limiting factor is congestion on communication bus\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "What can you tell me about parallel database (pdbs) ?",
  "answer": "Parallel databases provide various forms of parallelism ...\n process parallelism can speed up query evaluation\n processor parallelism can assist in speeding up memory ops\n processor parallelism introduces cache coherence issues\n disk parallelism can assist in overcoming latency\n disk parallelism can be used to improve fault-tolerance (RAID)\n one limiting factor is congestion on communication bus\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "I want to know aboutparallel database (pdbs)",
  "answer": "Parallel databases provide various forms of parallelism ...\n process parallelism can speed up query evaluation\n processor parallelism can assist in speeding up memory ops\n processor parallelism introduces cache coherence issues\n disk parallelism can assist in overcoming latency\n disk parallelism can be used to improve fault-tolerance (RAID)\n one limiting factor is congestion on communication bus\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "Do you have information about parallel database (pdbs) ?",
  "answer": "Parallel databases provide various forms of parallelism ...\n process parallelism can speed up query evaluation\n processor parallelism can assist in speeding up memory ops\n processor parallelism introduces cache coherence issues\n disk parallelism can assist in overcoming latency\n disk parallelism can be used to improve fault-tolerance (RAID)\n one limiting factor is congestion on communication bus\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "Do you know parallel database (pdbs) ?",
  "answer": "Parallel databases provide various forms of parallelism ...\n process parallelism can speed up query evaluation\n processor parallelism can assist in speeding up memory ops\n processor parallelism introduces cache coherence issues\n disk parallelism can assist in overcoming latency\n disk parallelism can be used to improve fault-tolerance (RAID)\n one limiting factor is congestion on communication bus\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "what about parallel database (pdbs) ?",
  "answer": "Parallel databases provide various forms of parallelism ...\n process parallelism can speed up query evaluation\n processor parallelism can assist in speeding up memory ops\n processor parallelism introduces cache coherence issues\n disk parallelism can assist in overcoming latency\n disk parallelism can be used to improve fault-tolerance (RAID)\n one limiting factor is congestion on communication bus\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "What is parallel database (pdbs) ?",
  "answer": "Types of parallelism\n pipeline parallelism\n multi-step process,   each processor handles one step\n run in parallel and pipeline result from one to another\n partition parallelism\n many processors running in parallel\n each performs same task on a subset of the data\n results from processors need to be merged\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "What is parallel database (pdbs) ?",
  "answer": "Types of parallelism\n pipeline parallelism\n multi-step process,   each processor handles one step\n run in parallel and pipeline result from one to another\n partition parallelism\n many processors running in parallel\n each performs same task on a subset of the data\n results from processors need to be merged\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "What does parallel database (pdbs) mean ?",
  "answer": "Types of parallelism\n pipeline parallelism\n multi-step process,   each processor handles one step\n run in parallel and pipeline result from one to another\n partition parallelism\n many processors running in parallel\n each performs same task on a subset of the data\n results from processors need to be merged\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "Tell me something about parallel database (pdbs) ?",
  "answer": "Types of parallelism\n pipeline parallelism\n multi-step process,   each processor handles one step\n run in parallel and pipeline result from one to another\n partition parallelism\n many processors running in parallel\n each performs same task on a subset of the data\n results from processors need to be merged\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "Explain parallel database (pdbs) ?",
  "answer": "Types of parallelism\n pipeline parallelism\n multi-step process,   each processor handles one step\n run in parallel and pipeline result from one to another\n partition parallelism\n many processors running in parallel\n each performs same task on a subset of the data\n results from processors need to be merged\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "Can you tell me about parallel database (pdbs) ?",
  "answer": "Types of parallelism\n pipeline parallelism\n multi-step process,   each processor handles one step\n run in parallel and pipeline result from one to another\n partition parallelism\n many processors running in parallel\n each performs same task on a subset of the data\n results from processors need to be merged\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "What do you know about parallel database (pdbs) ?",
  "answer": "Types of parallelism\n pipeline parallelism\n multi-step process,   each processor handles one step\n run in parallel and pipeline result from one to another\n partition parallelism\n many processors running in parallel\n each performs same task on a subset of the data\n results from processors need to be merged\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "What can you tell me about parallel database (pdbs) ?",
  "answer": "Types of parallelism\n pipeline parallelism\n multi-step process,   each processor handles one step\n run in parallel and pipeline result from one to another\n partition parallelism\n many processors running in parallel\n each performs same task on a subset of the data\n results from processors need to be merged\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "I want to know aboutparallel database (pdbs)",
  "answer": "Types of parallelism\n pipeline parallelism\n multi-step process,   each processor handles one step\n run in parallel and pipeline result from one to another\n partition parallelism\n many processors running in parallel\n each performs same task on a subset of the data\n results from processors need to be merged\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "Do you have information about parallel database (pdbs) ?",
  "answer": "Types of parallelism\n pipeline parallelism\n multi-step process,   each processor handles one step\n run in parallel and pipeline result from one to another\n partition parallelism\n many processors running in parallel\n each performs same task on a subset of the data\n results from processors need to be merged\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "Do you know parallel database (pdbs) ?",
  "answer": "Types of parallelism\n pipeline parallelism\n multi-step process,   each processor handles one step\n run in parallel and pipeline result from one to another\n partition parallelism\n many processors running in parallel\n each performs same task on a subset of the data\n results from processors need to be merged\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "what about parallel database (pdbs) ?",
  "answer": "Types of parallelism\n pipeline parallelism\n multi-step process,   each processor handles one step\n run in parallel and pipeline result from one to another\n partition parallelism\n many processors running in parallel\n each performs same task on a subset of the data\n results from processors need to be merged\n",
  "intent": "description",
  "key_words": [
   "parallel",
   "database",
   "(pdbs)"
  ]
 },
 {
  "question": "What is data storage in pdbs ?",
  "answer": "Consider each table as a collection of pages ...\n Page addressing on single processor/disk: (Table, File, Page)\n Table maps to a set of files (e.g. named by tableID)\n File distinguishes primary/overflow files\n PageNum maps to an offset in a specific file\n If multiple nodes, then addressing depends how data distributed\n partitioned: (Node, Table, File, Page)\n replicated: ({Nodes}, Table, File, Page)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What is data storage in pdbs ?",
  "answer": "Consider each table as a collection of pages ...\n Page addressing on single processor/disk: (Table, File, Page)\n Table maps to a set of files (e.g. named by tableID)\n File distinguishes primary/overflow files\n PageNum maps to an offset in a specific file\n If multiple nodes, then addressing depends how data distributed\n partitioned: (Node, Table, File, Page)\n replicated: ({Nodes}, Table, File, Page)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What does data storage in pdbs mean ?",
  "answer": "Consider each table as a collection of pages ...\n Page addressing on single processor/disk: (Table, File, Page)\n Table maps to a set of files (e.g. named by tableID)\n File distinguishes primary/overflow files\n PageNum maps to an offset in a specific file\n If multiple nodes, then addressing depends how data distributed\n partitioned: (Node, Table, File, Page)\n replicated: ({Nodes}, Table, File, Page)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Tell me something about data storage in pdbs ?",
  "answer": "Consider each table as a collection of pages ...\n Page addressing on single processor/disk: (Table, File, Page)\n Table maps to a set of files (e.g. named by tableID)\n File distinguishes primary/overflow files\n PageNum maps to an offset in a specific file\n If multiple nodes, then addressing depends how data distributed\n partitioned: (Node, Table, File, Page)\n replicated: ({Nodes}, Table, File, Page)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Explain data storage in pdbs ?",
  "answer": "Consider each table as a collection of pages ...\n Page addressing on single processor/disk: (Table, File, Page)\n Table maps to a set of files (e.g. named by tableID)\n File distinguishes primary/overflow files\n PageNum maps to an offset in a specific file\n If multiple nodes, then addressing depends how data distributed\n partitioned: (Node, Table, File, Page)\n replicated: ({Nodes}, Table, File, Page)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Can you tell me about data storage in pdbs ?",
  "answer": "Consider each table as a collection of pages ...\n Page addressing on single processor/disk: (Table, File, Page)\n Table maps to a set of files (e.g. named by tableID)\n File distinguishes primary/overflow files\n PageNum maps to an offset in a specific file\n If multiple nodes, then addressing depends how data distributed\n partitioned: (Node, Table, File, Page)\n replicated: ({Nodes}, Table, File, Page)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What do you know about data storage in pdbs ?",
  "answer": "Consider each table as a collection of pages ...\n Page addressing on single processor/disk: (Table, File, Page)\n Table maps to a set of files (e.g. named by tableID)\n File distinguishes primary/overflow files\n PageNum maps to an offset in a specific file\n If multiple nodes, then addressing depends how data distributed\n partitioned: (Node, Table, File, Page)\n replicated: ({Nodes}, Table, File, Page)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What can you tell me about data storage in pdbs ?",
  "answer": "Consider each table as a collection of pages ...\n Page addressing on single processor/disk: (Table, File, Page)\n Table maps to a set of files (e.g. named by tableID)\n File distinguishes primary/overflow files\n PageNum maps to an offset in a specific file\n If multiple nodes, then addressing depends how data distributed\n partitioned: (Node, Table, File, Page)\n replicated: ({Nodes}, Table, File, Page)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "I want to know aboutdata storage in pdbs",
  "answer": "Consider each table as a collection of pages ...\n Page addressing on single processor/disk: (Table, File, Page)\n Table maps to a set of files (e.g. named by tableID)\n File distinguishes primary/overflow files\n PageNum maps to an offset in a specific file\n If multiple nodes, then addressing depends how data distributed\n partitioned: (Node, Table, File, Page)\n replicated: ({Nodes}, Table, File, Page)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Do you have information about data storage in pdbs ?",
  "answer": "Consider each table as a collection of pages ...\n Page addressing on single processor/disk: (Table, File, Page)\n Table maps to a set of files (e.g. named by tableID)\n File distinguishes primary/overflow files\n PageNum maps to an offset in a specific file\n If multiple nodes, then addressing depends how data distributed\n partitioned: (Node, Table, File, Page)\n replicated: ({Nodes}, Table, File, Page)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Do you know data storage in pdbs ?",
  "answer": "Consider each table as a collection of pages ...\n Page addressing on single processor/disk: (Table, File, Page)\n Table maps to a set of files (e.g. named by tableID)\n File distinguishes primary/overflow files\n PageNum maps to an offset in a specific file\n If multiple nodes, then addressing depends how data distributed\n partitioned: (Node, Table, File, Page)\n replicated: ({Nodes}, Table, File, Page)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "what about data storage in pdbs ?",
  "answer": "Consider each table as a collection of pages ...\n Page addressing on single processor/disk: (Table, File, Page)\n Table maps to a set of files (e.g. named by tableID)\n File distinguishes primary/overflow files\n PageNum maps to an offset in a specific file\n If multiple nodes, then addressing depends how data distributed\n partitioned: (Node, Table, File, Page)\n replicated: ({Nodes}, Table, File, Page)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What is data storage in pdbs ?",
  "answer": "Assume that each table/relation consists of pages in a file\n Can distribute data across multiple storage devices\n duplicate all pages from a relation  (replication)\n store some pages on one store, some on others  (partitioning)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What is data storage in pdbs ?",
  "answer": "Assume that each table/relation consists of pages in a file\n Can distribute data across multiple storage devices\n duplicate all pages from a relation  (replication)\n store some pages on one store, some on others  (partitioning)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What does data storage in pdbs mean ?",
  "answer": "Assume that each table/relation consists of pages in a file\n Can distribute data across multiple storage devices\n duplicate all pages from a relation  (replication)\n store some pages on one store, some on others  (partitioning)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Tell me something about data storage in pdbs ?",
  "answer": "Assume that each table/relation consists of pages in a file\n Can distribute data across multiple storage devices\n duplicate all pages from a relation  (replication)\n store some pages on one store, some on others  (partitioning)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Explain data storage in pdbs ?",
  "answer": "Assume that each table/relation consists of pages in a file\n Can distribute data across multiple storage devices\n duplicate all pages from a relation  (replication)\n store some pages on one store, some on others  (partitioning)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Can you tell me about data storage in pdbs ?",
  "answer": "Assume that each table/relation consists of pages in a file\n Can distribute data across multiple storage devices\n duplicate all pages from a relation  (replication)\n store some pages on one store, some on others  (partitioning)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What do you know about data storage in pdbs ?",
  "answer": "Assume that each table/relation consists of pages in a file\n Can distribute data across multiple storage devices\n duplicate all pages from a relation  (replication)\n store some pages on one store, some on others  (partitioning)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What can you tell me about data storage in pdbs ?",
  "answer": "Assume that each table/relation consists of pages in a file\n Can distribute data across multiple storage devices\n duplicate all pages from a relation  (replication)\n store some pages on one store, some on others  (partitioning)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "I want to know aboutdata storage in pdbs",
  "answer": "Assume that each table/relation consists of pages in a file\n Can distribute data across multiple storage devices\n duplicate all pages from a relation  (replication)\n store some pages on one store, some on others  (partitioning)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Do you have information about data storage in pdbs ?",
  "answer": "Assume that each table/relation consists of pages in a file\n Can distribute data across multiple storage devices\n duplicate all pages from a relation  (replication)\n store some pages on one store, some on others  (partitioning)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Do you know data storage in pdbs ?",
  "answer": "Assume that each table/relation consists of pages in a file\n Can distribute data across multiple storage devices\n duplicate all pages from a relation  (replication)\n store some pages on one store, some on others  (partitioning)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "what about data storage in pdbs ?",
  "answer": "Assume that each table/relation consists of pages in a file\n Can distribute data across multiple storage devices\n duplicate all pages from a relation  (replication)\n store some pages on one store, some on others  (partitioning)\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What is data storage in pdbs ?",
  "answer": "Assume that partitioning is based on one attribute\n Data-partitioning strategies for one table on n nodes:\n round-robin,   hash-based,   range-based\n Round-robin partitioning\n cycle through nodes, new tuple added on \"next\" node\n e.g. i th tuple is placed on (i mod n)th node\n balances load on nodes;   no help for querying\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What is data storage in pdbs ?",
  "answer": "Assume that partitioning is based on one attribute\n Data-partitioning strategies for one table on n nodes:\n round-robin,   hash-based,   range-based\n Round-robin partitioning\n cycle through nodes, new tuple added on \"next\" node\n e.g. i th tuple is placed on (i mod n)th node\n balances load on nodes;   no help for querying\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What does data storage in pdbs mean ?",
  "answer": "Assume that partitioning is based on one attribute\n Data-partitioning strategies for one table on n nodes:\n round-robin,   hash-based,   range-based\n Round-robin partitioning\n cycle through nodes, new tuple added on \"next\" node\n e.g. i th tuple is placed on (i mod n)th node\n balances load on nodes;   no help for querying\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Tell me something about data storage in pdbs ?",
  "answer": "Assume that partitioning is based on one attribute\n Data-partitioning strategies for one table on n nodes:\n round-robin,   hash-based,   range-based\n Round-robin partitioning\n cycle through nodes, new tuple added on \"next\" node\n e.g. i th tuple is placed on (i mod n)th node\n balances load on nodes;   no help for querying\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Explain data storage in pdbs ?",
  "answer": "Assume that partitioning is based on one attribute\n Data-partitioning strategies for one table on n nodes:\n round-robin,   hash-based,   range-based\n Round-robin partitioning\n cycle through nodes, new tuple added on \"next\" node\n e.g. i th tuple is placed on (i mod n)th node\n balances load on nodes;   no help for querying\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Can you tell me about data storage in pdbs ?",
  "answer": "Assume that partitioning is based on one attribute\n Data-partitioning strategies for one table on n nodes:\n round-robin,   hash-based,   range-based\n Round-robin partitioning\n cycle through nodes, new tuple added on \"next\" node\n e.g. i th tuple is placed on (i mod n)th node\n balances load on nodes;   no help for querying\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What do you know about data storage in pdbs ?",
  "answer": "Assume that partitioning is based on one attribute\n Data-partitioning strategies for one table on n nodes:\n round-robin,   hash-based,   range-based\n Round-robin partitioning\n cycle through nodes, new tuple added on \"next\" node\n e.g. i th tuple is placed on (i mod n)th node\n balances load on nodes;   no help for querying\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What can you tell me about data storage in pdbs ?",
  "answer": "Assume that partitioning is based on one attribute\n Data-partitioning strategies for one table on n nodes:\n round-robin,   hash-based,   range-based\n Round-robin partitioning\n cycle through nodes, new tuple added on \"next\" node\n e.g. i th tuple is placed on (i mod n)th node\n balances load on nodes;   no help for querying\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "I want to know aboutdata storage in pdbs",
  "answer": "Assume that partitioning is based on one attribute\n Data-partitioning strategies for one table on n nodes:\n round-robin,   hash-based,   range-based\n Round-robin partitioning\n cycle through nodes, new tuple added on \"next\" node\n e.g. i th tuple is placed on (i mod n)th node\n balances load on nodes;   no help for querying\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Do you have information about data storage in pdbs ?",
  "answer": "Assume that partitioning is based on one attribute\n Data-partitioning strategies for one table on n nodes:\n round-robin,   hash-based,   range-based\n Round-robin partitioning\n cycle through nodes, new tuple added on \"next\" node\n e.g. i th tuple is placed on (i mod n)th node\n balances load on nodes;   no help for querying\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Do you know data storage in pdbs ?",
  "answer": "Assume that partitioning is based on one attribute\n Data-partitioning strategies for one table on n nodes:\n round-robin,   hash-based,   range-based\n Round-robin partitioning\n cycle through nodes, new tuple added on \"next\" node\n e.g. i th tuple is placed on (i mod n)th node\n balances load on nodes;   no help for querying\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "what about data storage in pdbs ?",
  "answer": "Assume that partitioning is based on one attribute\n Data-partitioning strategies for one table on n nodes:\n round-robin,   hash-based,   range-based\n Round-robin partitioning\n cycle through nodes, new tuple added on \"next\" node\n e.g. i th tuple is placed on (i mod n)th node\n balances load on nodes;   no help for querying\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What is data storage in pdbs ?",
  "answer": "Hash partitioning\n use hash value to determine which node and page\n e.g. i = hash(tuple) so tuple is placed on i th node\n helpful for equality-based queries ?   not really\n Range partitioning\n ranges of attr values are assigned to processors\n e.g. values 1-10 on node0,  11-20 on node1, ...,  99-100 noden-1\n potentially helpful for range-based queries\n In both cases, data skew may lead to unbalanced load\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What is data storage in pdbs ?",
  "answer": "Hash partitioning\n use hash value to determine which node and page\n e.g. i = hash(tuple) so tuple is placed on i th node\n helpful for equality-based queries ?   not really\n Range partitioning\n ranges of attr values are assigned to processors\n e.g. values 1-10 on node0,  11-20 on node1, ...,  99-100 noden-1\n potentially helpful for range-based queries\n In both cases, data skew may lead to unbalanced load\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What does data storage in pdbs mean ?",
  "answer": "Hash partitioning\n use hash value to determine which node and page\n e.g. i = hash(tuple) so tuple is placed on i th node\n helpful for equality-based queries ?   not really\n Range partitioning\n ranges of attr values are assigned to processors\n e.g. values 1-10 on node0,  11-20 on node1, ...,  99-100 noden-1\n potentially helpful for range-based queries\n In both cases, data skew may lead to unbalanced load\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Tell me something about data storage in pdbs ?",
  "answer": "Hash partitioning\n use hash value to determine which node and page\n e.g. i = hash(tuple) so tuple is placed on i th node\n helpful for equality-based queries ?   not really\n Range partitioning\n ranges of attr values are assigned to processors\n e.g. values 1-10 on node0,  11-20 on node1, ...,  99-100 noden-1\n potentially helpful for range-based queries\n In both cases, data skew may lead to unbalanced load\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Explain data storage in pdbs ?",
  "answer": "Hash partitioning\n use hash value to determine which node and page\n e.g. i = hash(tuple) so tuple is placed on i th node\n helpful for equality-based queries ?   not really\n Range partitioning\n ranges of attr values are assigned to processors\n e.g. values 1-10 on node0,  11-20 on node1, ...,  99-100 noden-1\n potentially helpful for range-based queries\n In both cases, data skew may lead to unbalanced load\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Can you tell me about data storage in pdbs ?",
  "answer": "Hash partitioning\n use hash value to determine which node and page\n e.g. i = hash(tuple) so tuple is placed on i th node\n helpful for equality-based queries ?   not really\n Range partitioning\n ranges of attr values are assigned to processors\n e.g. values 1-10 on node0,  11-20 on node1, ...,  99-100 noden-1\n potentially helpful for range-based queries\n In both cases, data skew may lead to unbalanced load\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What do you know about data storage in pdbs ?",
  "answer": "Hash partitioning\n use hash value to determine which node and page\n e.g. i = hash(tuple) so tuple is placed on i th node\n helpful for equality-based queries ?   not really\n Range partitioning\n ranges of attr values are assigned to processors\n e.g. values 1-10 on node0,  11-20 on node1, ...,  99-100 noden-1\n potentially helpful for range-based queries\n In both cases, data skew may lead to unbalanced load\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What can you tell me about data storage in pdbs ?",
  "answer": "Hash partitioning\n use hash value to determine which node and page\n e.g. i = hash(tuple) so tuple is placed on i th node\n helpful for equality-based queries ?   not really\n Range partitioning\n ranges of attr values are assigned to processors\n e.g. values 1-10 on node0,  11-20 on node1, ...,  99-100 noden-1\n potentially helpful for range-based queries\n In both cases, data skew may lead to unbalanced load\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "I want to know aboutdata storage in pdbs",
  "answer": "Hash partitioning\n use hash value to determine which node and page\n e.g. i = hash(tuple) so tuple is placed on i th node\n helpful for equality-based queries ?   not really\n Range partitioning\n ranges of attr values are assigned to processors\n e.g. values 1-10 on node0,  11-20 on node1, ...,  99-100 noden-1\n potentially helpful for range-based queries\n In both cases, data skew may lead to unbalanced load\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Do you have information about data storage in pdbs ?",
  "answer": "Hash partitioning\n use hash value to determine which node and page\n e.g. i = hash(tuple) so tuple is placed on i th node\n helpful for equality-based queries ?   not really\n Range partitioning\n ranges of attr values are assigned to processors\n e.g. values 1-10 on node0,  11-20 on node1, ...,  99-100 noden-1\n potentially helpful for range-based queries\n In both cases, data skew may lead to unbalanced load\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "Do you know data storage in pdbs ?",
  "answer": "Hash partitioning\n use hash value to determine which node and page\n e.g. i = hash(tuple) so tuple is placed on i th node\n helpful for equality-based queries ?   not really\n Range partitioning\n ranges of attr values are assigned to processors\n e.g. values 1-10 on node0,  11-20 on node1, ...,  99-100 noden-1\n potentially helpful for range-based queries\n In both cases, data skew may lead to unbalanced load\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "what about data storage in pdbs ?",
  "answer": "Hash partitioning\n use hash value to determine which node and page\n e.g. i = hash(tuple) so tuple is placed on i th node\n helpful for equality-based queries ?   not really\n Range partitioning\n ranges of attr values are assigned to processors\n e.g. values 1-10 on node0,  11-20 on node1, ...,  99-100 noden-1\n potentially helpful for range-based queries\n In both cases, data skew may lead to unbalanced load\n",
  "intent": "description",
  "key_words": [
   "data",
   "storage",
   "in",
   "pdbs"
  ]
 },
 {
  "question": "What is parallelism in db operation ?",
  "answer": "Different types of parallelism in DBMS operations\n intra-operator parallelism\n get all machines working to compute a given operation\n (scan, sort, join)\n inter-operator parallelism\n each operator runs concurrently on a different processor (exploits pipelining)\n Inter-query parallelism\n different queries run on different processors\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What is parallelism in db operation ?",
  "answer": "Different types of parallelism in DBMS operations\n intra-operator parallelism\n get all machines working to compute a given operation\n (scan, sort, join)\n inter-operator parallelism\n each operator runs concurrently on a different processor (exploits pipelining)\n Inter-query parallelism\n different queries run on different processors\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What does parallelism in db operation mean ?",
  "answer": "Different types of parallelism in DBMS operations\n intra-operator parallelism\n get all machines working to compute a given operation\n (scan, sort, join)\n inter-operator parallelism\n each operator runs concurrently on a different processor (exploits pipelining)\n Inter-query parallelism\n different queries run on different processors\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Tell me something about parallelism in db operation ?",
  "answer": "Different types of parallelism in DBMS operations\n intra-operator parallelism\n get all machines working to compute a given operation\n (scan, sort, join)\n inter-operator parallelism\n each operator runs concurrently on a different processor (exploits pipelining)\n Inter-query parallelism\n different queries run on different processors\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Explain parallelism in db operation ?",
  "answer": "Different types of parallelism in DBMS operations\n intra-operator parallelism\n get all machines working to compute a given operation\n (scan, sort, join)\n inter-operator parallelism\n each operator runs concurrently on a different processor (exploits pipelining)\n Inter-query parallelism\n different queries run on different processors\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Can you tell me about parallelism in db operation ?",
  "answer": "Different types of parallelism in DBMS operations\n intra-operator parallelism\n get all machines working to compute a given operation\n (scan, sort, join)\n inter-operator parallelism\n each operator runs concurrently on a different processor (exploits pipelining)\n Inter-query parallelism\n different queries run on different processors\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What do you know about parallelism in db operation ?",
  "answer": "Different types of parallelism in DBMS operations\n intra-operator parallelism\n get all machines working to compute a given operation\n (scan, sort, join)\n inter-operator parallelism\n each operator runs concurrently on a different processor (exploits pipelining)\n Inter-query parallelism\n different queries run on different processors\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What can you tell me about parallelism in db operation ?",
  "answer": "Different types of parallelism in DBMS operations\n intra-operator parallelism\n get all machines working to compute a given operation\n (scan, sort, join)\n inter-operator parallelism\n each operator runs concurrently on a different processor (exploits pipelining)\n Inter-query parallelism\n different queries run on different processors\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "I want to know aboutparallelism in db operation",
  "answer": "Different types of parallelism in DBMS operations\n intra-operator parallelism\n get all machines working to compute a given operation\n (scan, sort, join)\n inter-operator parallelism\n each operator runs concurrently on a different processor (exploits pipelining)\n Inter-query parallelism\n different queries run on different processors\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Do you have information about parallelism in db operation ?",
  "answer": "Different types of parallelism in DBMS operations\n intra-operator parallelism\n get all machines working to compute a given operation\n (scan, sort, join)\n inter-operator parallelism\n each operator runs concurrently on a different processor (exploits pipelining)\n Inter-query parallelism\n different queries run on different processors\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Do you know parallelism in db operation ?",
  "answer": "Different types of parallelism in DBMS operations\n intra-operator parallelism\n get all machines working to compute a given operation\n (scan, sort, join)\n inter-operator parallelism\n each operator runs concurrently on a different processor (exploits pipelining)\n Inter-query parallelism\n different queries run on different processors\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "what about parallelism in db operation ?",
  "answer": "Different types of parallelism in DBMS operations\n intra-operator parallelism\n get all machines working to compute a given operation\n (scan, sort, join)\n inter-operator parallelism\n each operator runs concurrently on a different processor (exploits pipelining)\n Inter-query parallelism\n different queries run on different processors\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What is parallelism in db operation ?",
  "answer": "Parallel scanning\n scan partitions in parallel and merge results\n selection may allow us to ignore some partitions (e.g. for range and hash partitioning)\n can build indexes on each partition\n Effectiveness depends on query type vs partitioning type\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What is parallelism in db operation ?",
  "answer": "Parallel scanning\n scan partitions in parallel and merge results\n selection may allow us to ignore some partitions (e.g. for range and hash partitioning)\n can build indexes on each partition\n Effectiveness depends on query type vs partitioning type\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What does parallelism in db operation mean ?",
  "answer": "Parallel scanning\n scan partitions in parallel and merge results\n selection may allow us to ignore some partitions (e.g. for range and hash partitioning)\n can build indexes on each partition\n Effectiveness depends on query type vs partitioning type\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Tell me something about parallelism in db operation ?",
  "answer": "Parallel scanning\n scan partitions in parallel and merge results\n selection may allow us to ignore some partitions (e.g. for range and hash partitioning)\n can build indexes on each partition\n Effectiveness depends on query type vs partitioning type\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Explain parallelism in db operation ?",
  "answer": "Parallel scanning\n scan partitions in parallel and merge results\n selection may allow us to ignore some partitions (e.g. for range and hash partitioning)\n can build indexes on each partition\n Effectiveness depends on query type vs partitioning type\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Can you tell me about parallelism in db operation ?",
  "answer": "Parallel scanning\n scan partitions in parallel and merge results\n selection may allow us to ignore some partitions (e.g. for range and hash partitioning)\n can build indexes on each partition\n Effectiveness depends on query type vs partitioning type\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What do you know about parallelism in db operation ?",
  "answer": "Parallel scanning\n scan partitions in parallel and merge results\n selection may allow us to ignore some partitions (e.g. for range and hash partitioning)\n can build indexes on each partition\n Effectiveness depends on query type vs partitioning type\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What can you tell me about parallelism in db operation ?",
  "answer": "Parallel scanning\n scan partitions in parallel and merge results\n selection may allow us to ignore some partitions (e.g. for range and hash partitioning)\n can build indexes on each partition\n Effectiveness depends on query type vs partitioning type\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "I want to know aboutparallelism in db operation",
  "answer": "Parallel scanning\n scan partitions in parallel and merge results\n selection may allow us to ignore some partitions (e.g. for range and hash partitioning)\n can build indexes on each partition\n Effectiveness depends on query type vs partitioning type\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Do you have information about parallelism in db operation ?",
  "answer": "Parallel scanning\n scan partitions in parallel and merge results\n selection may allow us to ignore some partitions (e.g. for range and hash partitioning)\n can build indexes on each partition\n Effectiveness depends on query type vs partitioning type\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Do you know parallelism in db operation ?",
  "answer": "Parallel scanning\n scan partitions in parallel and merge results\n selection may allow us to ignore some partitions (e.g. for range and hash partitioning)\n can build indexes on each partition\n Effectiveness depends on query type vs partitioning type\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "what about parallelism in db operation ?",
  "answer": "Parallel scanning\n scan partitions in parallel and merge results\n selection may allow us to ignore some partitions (e.g. for range and hash partitioning)\n can build indexes on each partition\n Effectiveness depends on query type vs partitioning type\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What is parallelism in db operation ?",
  "answer": "Parallel sorting\n scan in parallel, range-partition during scan\n pipeline into local sort on each processor\n \"merge\" sorted partitions in order\n Potential problem:\n data skew because of unfortunate choice of partition points\n resolve by initial data sampling to determine partitions\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What is parallelism in db operation ?",
  "answer": "Parallel sorting\n scan in parallel, range-partition during scan\n pipeline into local sort on each processor\n \"merge\" sorted partitions in order\n Potential problem:\n data skew because of unfortunate choice of partition points\n resolve by initial data sampling to determine partitions\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What does parallelism in db operation mean ?",
  "answer": "Parallel sorting\n scan in parallel, range-partition during scan\n pipeline into local sort on each processor\n \"merge\" sorted partitions in order\n Potential problem:\n data skew because of unfortunate choice of partition points\n resolve by initial data sampling to determine partitions\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Tell me something about parallelism in db operation ?",
  "answer": "Parallel sorting\n scan in parallel, range-partition during scan\n pipeline into local sort on each processor\n \"merge\" sorted partitions in order\n Potential problem:\n data skew because of unfortunate choice of partition points\n resolve by initial data sampling to determine partitions\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Explain parallelism in db operation ?",
  "answer": "Parallel sorting\n scan in parallel, range-partition during scan\n pipeline into local sort on each processor\n \"merge\" sorted partitions in order\n Potential problem:\n data skew because of unfortunate choice of partition points\n resolve by initial data sampling to determine partitions\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Can you tell me about parallelism in db operation ?",
  "answer": "Parallel sorting\n scan in parallel, range-partition during scan\n pipeline into local sort on each processor\n \"merge\" sorted partitions in order\n Potential problem:\n data skew because of unfortunate choice of partition points\n resolve by initial data sampling to determine partitions\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What do you know about parallelism in db operation ?",
  "answer": "Parallel sorting\n scan in parallel, range-partition during scan\n pipeline into local sort on each processor\n \"merge\" sorted partitions in order\n Potential problem:\n data skew because of unfortunate choice of partition points\n resolve by initial data sampling to determine partitions\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What can you tell me about parallelism in db operation ?",
  "answer": "Parallel sorting\n scan in parallel, range-partition during scan\n pipeline into local sort on each processor\n \"merge\" sorted partitions in order\n Potential problem:\n data skew because of unfortunate choice of partition points\n resolve by initial data sampling to determine partitions\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "I want to know aboutparallelism in db operation",
  "answer": "Parallel sorting\n scan in parallel, range-partition during scan\n pipeline into local sort on each processor\n \"merge\" sorted partitions in order\n Potential problem:\n data skew because of unfortunate choice of partition points\n resolve by initial data sampling to determine partitions\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Do you have information about parallelism in db operation ?",
  "answer": "Parallel sorting\n scan in parallel, range-partition during scan\n pipeline into local sort on each processor\n \"merge\" sorted partitions in order\n Potential problem:\n data skew because of unfortunate choice of partition points\n resolve by initial data sampling to determine partitions\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Do you know parallelism in db operation ?",
  "answer": "Parallel sorting\n scan in parallel, range-partition during scan\n pipeline into local sort on each processor\n \"merge\" sorted partitions in order\n Potential problem:\n data skew because of unfortunate choice of partition points\n resolve by initial data sampling to determine partitions\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "what about parallelism in db operation ?",
  "answer": "Parallel sorting\n scan in parallel, range-partition during scan\n pipeline into local sort on each processor\n \"merge\" sorted partitions in order\n Potential problem:\n data skew because of unfortunate choice of partition points\n resolve by initial data sampling to determine partitions\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What is parallelism in db operation ?",
  "answer": "Parallel nested loop join\n each outer tuple needs to examine each inner tuple\n but only if it could potentially join\n range/hash partitioning reduce partitions to consider\n Parallel sort-merge join\n as noted above, parallel sort gives range partitioning\n merging partitioned tables has no parallelism (but is fast)\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What is parallelism in db operation ?",
  "answer": "Parallel nested loop join\n each outer tuple needs to examine each inner tuple\n but only if it could potentially join\n range/hash partitioning reduce partitions to consider\n Parallel sort-merge join\n as noted above, parallel sort gives range partitioning\n merging partitioned tables has no parallelism (but is fast)\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What does parallelism in db operation mean ?",
  "answer": "Parallel nested loop join\n each outer tuple needs to examine each inner tuple\n but only if it could potentially join\n range/hash partitioning reduce partitions to consider\n Parallel sort-merge join\n as noted above, parallel sort gives range partitioning\n merging partitioned tables has no parallelism (but is fast)\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Tell me something about parallelism in db operation ?",
  "answer": "Parallel nested loop join\n each outer tuple needs to examine each inner tuple\n but only if it could potentially join\n range/hash partitioning reduce partitions to consider\n Parallel sort-merge join\n as noted above, parallel sort gives range partitioning\n merging partitioned tables has no parallelism (but is fast)\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Explain parallelism in db operation ?",
  "answer": "Parallel nested loop join\n each outer tuple needs to examine each inner tuple\n but only if it could potentially join\n range/hash partitioning reduce partitions to consider\n Parallel sort-merge join\n as noted above, parallel sort gives range partitioning\n merging partitioned tables has no parallelism (but is fast)\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Can you tell me about parallelism in db operation ?",
  "answer": "Parallel nested loop join\n each outer tuple needs to examine each inner tuple\n but only if it could potentially join\n range/hash partitioning reduce partitions to consider\n Parallel sort-merge join\n as noted above, parallel sort gives range partitioning\n merging partitioned tables has no parallelism (but is fast)\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What do you know about parallelism in db operation ?",
  "answer": "Parallel nested loop join\n each outer tuple needs to examine each inner tuple\n but only if it could potentially join\n range/hash partitioning reduce partitions to consider\n Parallel sort-merge join\n as noted above, parallel sort gives range partitioning\n merging partitioned tables has no parallelism (but is fast)\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What can you tell me about parallelism in db operation ?",
  "answer": "Parallel nested loop join\n each outer tuple needs to examine each inner tuple\n but only if it could potentially join\n range/hash partitioning reduce partitions to consider\n Parallel sort-merge join\n as noted above, parallel sort gives range partitioning\n merging partitioned tables has no parallelism (but is fast)\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "I want to know aboutparallelism in db operation",
  "answer": "Parallel nested loop join\n each outer tuple needs to examine each inner tuple\n but only if it could potentially join\n range/hash partitioning reduce partitions to consider\n Parallel sort-merge join\n as noted above, parallel sort gives range partitioning\n merging partitioned tables has no parallelism (but is fast)\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Do you have information about parallelism in db operation ?",
  "answer": "Parallel nested loop join\n each outer tuple needs to examine each inner tuple\n but only if it could potentially join\n range/hash partitioning reduce partitions to consider\n Parallel sort-merge join\n as noted above, parallel sort gives range partitioning\n merging partitioned tables has no parallelism (but is fast)\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Do you know parallelism in db operation ?",
  "answer": "Parallel nested loop join\n each outer tuple needs to examine each inner tuple\n but only if it could potentially join\n range/hash partitioning reduce partitions to consider\n Parallel sort-merge join\n as noted above, parallel sort gives range partitioning\n merging partitioned tables has no parallelism (but is fast)\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "what about parallelism in db operation ?",
  "answer": "Parallel nested loop join\n each outer tuple needs to examine each inner tuple\n but only if it could potentially join\n range/hash partitioning reduce partitions to consider\n Parallel sort-merge join\n as noted above, parallel sort gives range partitioning\n merging partitioned tables has no parallelism (but is fast)\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What is parallelism in db operation ?",
  "answer": "Parallel hash join\n distribute partitions to different processors\n partition 0 of R goes to same site as partition 0 of S\n join phase can be done in parallel on each processor\n then results need to be merged\n very effective for equijoin\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What is parallelism in db operation ?",
  "answer": "Parallel hash join\n distribute partitions to different processors\n partition 0 of R goes to same site as partition 0 of S\n join phase can be done in parallel on each processor\n then results need to be merged\n very effective for equijoin\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What does parallelism in db operation mean ?",
  "answer": "Parallel hash join\n distribute partitions to different processors\n partition 0 of R goes to same site as partition 0 of S\n join phase can be done in parallel on each processor\n then results need to be merged\n very effective for equijoin\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Tell me something about parallelism in db operation ?",
  "answer": "Parallel hash join\n distribute partitions to different processors\n partition 0 of R goes to same site as partition 0 of S\n join phase can be done in parallel on each processor\n then results need to be merged\n very effective for equijoin\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Explain parallelism in db operation ?",
  "answer": "Parallel hash join\n distribute partitions to different processors\n partition 0 of R goes to same site as partition 0 of S\n join phase can be done in parallel on each processor\n then results need to be merged\n very effective for equijoin\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Can you tell me about parallelism in db operation ?",
  "answer": "Parallel hash join\n distribute partitions to different processors\n partition 0 of R goes to same site as partition 0 of S\n join phase can be done in parallel on each processor\n then results need to be merged\n very effective for equijoin\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What do you know about parallelism in db operation ?",
  "answer": "Parallel hash join\n distribute partitions to different processors\n partition 0 of R goes to same site as partition 0 of S\n join phase can be done in parallel on each processor\n then results need to be merged\n very effective for equijoin\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What can you tell me about parallelism in db operation ?",
  "answer": "Parallel hash join\n distribute partitions to different processors\n partition 0 of R goes to same site as partition 0 of S\n join phase can be done in parallel on each processor\n then results need to be merged\n very effective for equijoin\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "I want to know aboutparallelism in db operation",
  "answer": "Parallel hash join\n distribute partitions to different processors\n partition 0 of R goes to same site as partition 0 of S\n join phase can be done in parallel on each processor\n then results need to be merged\n very effective for equijoin\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Do you have information about parallelism in db operation ?",
  "answer": "Parallel hash join\n distribute partitions to different processors\n partition 0 of R goes to same site as partition 0 of S\n join phase can be done in parallel on each processor\n then results need to be merged\n very effective for equijoin\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Do you know parallelism in db operation ?",
  "answer": "Parallel hash join\n distribute partitions to different processors\n partition 0 of R goes to same site as partition 0 of S\n join phase can be done in parallel on each processor\n then results need to be merged\n very effective for equijoin\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "what about parallelism in db operation ?",
  "answer": "Parallel hash join\n distribute partitions to different processors\n partition 0 of R goes to same site as partition 0 of S\n join phase can be done in parallel on each processor\n then results need to be merged\n very effective for equijoin\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What is parallelism in db operation ?",
  "answer": "Parallel hash join:\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What is parallelism in db operation ?",
  "answer": "Parallel hash join:\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What does parallelism in db operation mean ?",
  "answer": "Parallel hash join:\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Tell me something about parallelism in db operation ?",
  "answer": "Parallel hash join:\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Explain parallelism in db operation ?",
  "answer": "Parallel hash join:\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Can you tell me about parallelism in db operation ?",
  "answer": "Parallel hash join:\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What do you know about parallelism in db operation ?",
  "answer": "Parallel hash join:\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What can you tell me about parallelism in db operation ?",
  "answer": "Parallel hash join:\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "I want to know aboutparallelism in db operation",
  "answer": "Parallel hash join:\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Do you have information about parallelism in db operation ?",
  "answer": "Parallel hash join:\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "Do you know parallelism in db operation ?",
  "answer": "Parallel hash join:\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "what about parallelism in db operation ?",
  "answer": "Parallel hash join:\n",
  "intent": "description",
  "key_words": [
   "parallelism",
   "in",
   "db",
   "operation"
  ]
 },
 {
  "question": "What is postgresql and parallelism ?",
  "answer": "PostgreSQL assumes\n shared memory space accessable to all back-ends\n files for one table are located on one disk\n PostgreSQL allows\n data to be distributed across multiple disk devices\n So could run on ...\n shared-memory, shared-disk architectures\n hierarchical architectures with distributed virtual memory\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What is postgresql and parallelism ?",
  "answer": "PostgreSQL assumes\n shared memory space accessable to all back-ends\n files for one table are located on one disk\n PostgreSQL allows\n data to be distributed across multiple disk devices\n So could run on ...\n shared-memory, shared-disk architectures\n hierarchical architectures with distributed virtual memory\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What does postgresql and parallelism mean ?",
  "answer": "PostgreSQL assumes\n shared memory space accessable to all back-ends\n files for one table are located on one disk\n PostgreSQL allows\n data to be distributed across multiple disk devices\n So could run on ...\n shared-memory, shared-disk architectures\n hierarchical architectures with distributed virtual memory\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Tell me something about postgresql and parallelism ?",
  "answer": "PostgreSQL assumes\n shared memory space accessable to all back-ends\n files for one table are located on one disk\n PostgreSQL allows\n data to be distributed across multiple disk devices\n So could run on ...\n shared-memory, shared-disk architectures\n hierarchical architectures with distributed virtual memory\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Explain postgresql and parallelism ?",
  "answer": "PostgreSQL assumes\n shared memory space accessable to all back-ends\n files for one table are located on one disk\n PostgreSQL allows\n data to be distributed across multiple disk devices\n So could run on ...\n shared-memory, shared-disk architectures\n hierarchical architectures with distributed virtual memory\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Can you tell me about postgresql and parallelism ?",
  "answer": "PostgreSQL assumes\n shared memory space accessable to all back-ends\n files for one table are located on one disk\n PostgreSQL allows\n data to be distributed across multiple disk devices\n So could run on ...\n shared-memory, shared-disk architectures\n hierarchical architectures with distributed virtual memory\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What do you know about postgresql and parallelism ?",
  "answer": "PostgreSQL assumes\n shared memory space accessable to all back-ends\n files for one table are located on one disk\n PostgreSQL allows\n data to be distributed across multiple disk devices\n So could run on ...\n shared-memory, shared-disk architectures\n hierarchical architectures with distributed virtual memory\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What can you tell me about postgresql and parallelism ?",
  "answer": "PostgreSQL assumes\n shared memory space accessable to all back-ends\n files for one table are located on one disk\n PostgreSQL allows\n data to be distributed across multiple disk devices\n So could run on ...\n shared-memory, shared-disk architectures\n hierarchical architectures with distributed virtual memory\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "I want to know aboutpostgresql and parallelism",
  "answer": "PostgreSQL assumes\n shared memory space accessable to all back-ends\n files for one table are located on one disk\n PostgreSQL allows\n data to be distributed across multiple disk devices\n So could run on ...\n shared-memory, shared-disk architectures\n hierarchical architectures with distributed virtual memory\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Do you have information about postgresql and parallelism ?",
  "answer": "PostgreSQL assumes\n shared memory space accessable to all back-ends\n files for one table are located on one disk\n PostgreSQL allows\n data to be distributed across multiple disk devices\n So could run on ...\n shared-memory, shared-disk architectures\n hierarchical architectures with distributed virtual memory\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Do you know postgresql and parallelism ?",
  "answer": "PostgreSQL assumes\n shared memory space accessable to all back-ends\n files for one table are located on one disk\n PostgreSQL allows\n data to be distributed across multiple disk devices\n So could run on ...\n shared-memory, shared-disk architectures\n hierarchical architectures with distributed virtual memory\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "what about postgresql and parallelism ?",
  "answer": "PostgreSQL assumes\n shared memory space accessable to all back-ends\n files for one table are located on one disk\n PostgreSQL allows\n data to be distributed across multiple disk devices\n So could run on ...\n shared-memory, shared-disk architectures\n hierarchical architectures with distributed virtual memory\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What is postgresql and parallelism ?",
  "answer": "PostgreSQL can provide\n multiple servers running on separate nodes\n application #1: high availability\n \"standby\" server takes over if primary server fails\n application #2: load balancing\n several servers can be used to provide same data\n direct queries to least loaded server\n Both need data synchronisation between servers\n PostgreSQL uses notion of master and slave servers.\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What is postgresql and parallelism ?",
  "answer": "PostgreSQL can provide\n multiple servers running on separate nodes\n application #1: high availability\n \"standby\" server takes over if primary server fails\n application #2: load balancing\n several servers can be used to provide same data\n direct queries to least loaded server\n Both need data synchronisation between servers\n PostgreSQL uses notion of master and slave servers.\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What does postgresql and parallelism mean ?",
  "answer": "PostgreSQL can provide\n multiple servers running on separate nodes\n application #1: high availability\n \"standby\" server takes over if primary server fails\n application #2: load balancing\n several servers can be used to provide same data\n direct queries to least loaded server\n Both need data synchronisation between servers\n PostgreSQL uses notion of master and slave servers.\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Tell me something about postgresql and parallelism ?",
  "answer": "PostgreSQL can provide\n multiple servers running on separate nodes\n application #1: high availability\n \"standby\" server takes over if primary server fails\n application #2: load balancing\n several servers can be used to provide same data\n direct queries to least loaded server\n Both need data synchronisation between servers\n PostgreSQL uses notion of master and slave servers.\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Explain postgresql and parallelism ?",
  "answer": "PostgreSQL can provide\n multiple servers running on separate nodes\n application #1: high availability\n \"standby\" server takes over if primary server fails\n application #2: load balancing\n several servers can be used to provide same data\n direct queries to least loaded server\n Both need data synchronisation between servers\n PostgreSQL uses notion of master and slave servers.\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Can you tell me about postgresql and parallelism ?",
  "answer": "PostgreSQL can provide\n multiple servers running on separate nodes\n application #1: high availability\n \"standby\" server takes over if primary server fails\n application #2: load balancing\n several servers can be used to provide same data\n direct queries to least loaded server\n Both need data synchronisation between servers\n PostgreSQL uses notion of master and slave servers.\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What do you know about postgresql and parallelism ?",
  "answer": "PostgreSQL can provide\n multiple servers running on separate nodes\n application #1: high availability\n \"standby\" server takes over if primary server fails\n application #2: load balancing\n several servers can be used to provide same data\n direct queries to least loaded server\n Both need data synchronisation between servers\n PostgreSQL uses notion of master and slave servers.\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What can you tell me about postgresql and parallelism ?",
  "answer": "PostgreSQL can provide\n multiple servers running on separate nodes\n application #1: high availability\n \"standby\" server takes over if primary server fails\n application #2: load balancing\n several servers can be used to provide same data\n direct queries to least loaded server\n Both need data synchronisation between servers\n PostgreSQL uses notion of master and slave servers.\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "I want to know aboutpostgresql and parallelism",
  "answer": "PostgreSQL can provide\n multiple servers running on separate nodes\n application #1: high availability\n \"standby\" server takes over if primary server fails\n application #2: load balancing\n several servers can be used to provide same data\n direct queries to least loaded server\n Both need data synchronisation between servers\n PostgreSQL uses notion of master and slave servers.\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Do you have information about postgresql and parallelism ?",
  "answer": "PostgreSQL can provide\n multiple servers running on separate nodes\n application #1: high availability\n \"standby\" server takes over if primary server fails\n application #2: load balancing\n several servers can be used to provide same data\n direct queries to least loaded server\n Both need data synchronisation between servers\n PostgreSQL uses notion of master and slave servers.\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Do you know postgresql and parallelism ?",
  "answer": "PostgreSQL can provide\n multiple servers running on separate nodes\n application #1: high availability\n \"standby\" server takes over if primary server fails\n application #2: load balancing\n several servers can be used to provide same data\n direct queries to least loaded server\n Both need data synchronisation between servers\n PostgreSQL uses notion of master and slave servers.\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "what about postgresql and parallelism ?",
  "answer": "PostgreSQL can provide\n multiple servers running on separate nodes\n application #1: high availability\n \"standby\" server takes over if primary server fails\n application #2: load balancing\n several servers can be used to provide same data\n direct queries to least loaded server\n Both need data synchronisation between servers\n PostgreSQL uses notion of master and slave servers.\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What is postgresql and parallelism ?",
  "answer": "High availability ...\n updates occur on master, recorded in tx log\n tx logs shipped/streamed from master to slave(s)\n slave uses tx logs to maintain current state\n configuration controls frequency of log shipping\n bringing slave up-to-date is \"fast\" (~1-2secs)\n Note: small window for data loss (committed tx log records not sent)\n Load balancing ...\n not provided built-in to PostgreSQL, 3rd-party tools exist\n Distributed Databases\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What is postgresql and parallelism ?",
  "answer": "High availability ...\n updates occur on master, recorded in tx log\n tx logs shipped/streamed from master to slave(s)\n slave uses tx logs to maintain current state\n configuration controls frequency of log shipping\n bringing slave up-to-date is \"fast\" (~1-2secs)\n Note: small window for data loss (committed tx log records not sent)\n Load balancing ...\n not provided built-in to PostgreSQL, 3rd-party tools exist\n Distributed Databases\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What does postgresql and parallelism mean ?",
  "answer": "High availability ...\n updates occur on master, recorded in tx log\n tx logs shipped/streamed from master to slave(s)\n slave uses tx logs to maintain current state\n configuration controls frequency of log shipping\n bringing slave up-to-date is \"fast\" (~1-2secs)\n Note: small window for data loss (committed tx log records not sent)\n Load balancing ...\n not provided built-in to PostgreSQL, 3rd-party tools exist\n Distributed Databases\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Tell me something about postgresql and parallelism ?",
  "answer": "High availability ...\n updates occur on master, recorded in tx log\n tx logs shipped/streamed from master to slave(s)\n slave uses tx logs to maintain current state\n configuration controls frequency of log shipping\n bringing slave up-to-date is \"fast\" (~1-2secs)\n Note: small window for data loss (committed tx log records not sent)\n Load balancing ...\n not provided built-in to PostgreSQL, 3rd-party tools exist\n Distributed Databases\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Explain postgresql and parallelism ?",
  "answer": "High availability ...\n updates occur on master, recorded in tx log\n tx logs shipped/streamed from master to slave(s)\n slave uses tx logs to maintain current state\n configuration controls frequency of log shipping\n bringing slave up-to-date is \"fast\" (~1-2secs)\n Note: small window for data loss (committed tx log records not sent)\n Load balancing ...\n not provided built-in to PostgreSQL, 3rd-party tools exist\n Distributed Databases\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Can you tell me about postgresql and parallelism ?",
  "answer": "High availability ...\n updates occur on master, recorded in tx log\n tx logs shipped/streamed from master to slave(s)\n slave uses tx logs to maintain current state\n configuration controls frequency of log shipping\n bringing slave up-to-date is \"fast\" (~1-2secs)\n Note: small window for data loss (committed tx log records not sent)\n Load balancing ...\n not provided built-in to PostgreSQL, 3rd-party tools exist\n Distributed Databases\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What do you know about postgresql and parallelism ?",
  "answer": "High availability ...\n updates occur on master, recorded in tx log\n tx logs shipped/streamed from master to slave(s)\n slave uses tx logs to maintain current state\n configuration controls frequency of log shipping\n bringing slave up-to-date is \"fast\" (~1-2secs)\n Note: small window for data loss (committed tx log records not sent)\n Load balancing ...\n not provided built-in to PostgreSQL, 3rd-party tools exist\n Distributed Databases\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What can you tell me about postgresql and parallelism ?",
  "answer": "High availability ...\n updates occur on master, recorded in tx log\n tx logs shipped/streamed from master to slave(s)\n slave uses tx logs to maintain current state\n configuration controls frequency of log shipping\n bringing slave up-to-date is \"fast\" (~1-2secs)\n Note: small window for data loss (committed tx log records not sent)\n Load balancing ...\n not provided built-in to PostgreSQL, 3rd-party tools exist\n Distributed Databases\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "I want to know aboutpostgresql and parallelism",
  "answer": "High availability ...\n updates occur on master, recorded in tx log\n tx logs shipped/streamed from master to slave(s)\n slave uses tx logs to maintain current state\n configuration controls frequency of log shipping\n bringing slave up-to-date is \"fast\" (~1-2secs)\n Note: small window for data loss (committed tx log records not sent)\n Load balancing ...\n not provided built-in to PostgreSQL, 3rd-party tools exist\n Distributed Databases\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Do you have information about postgresql and parallelism ?",
  "answer": "High availability ...\n updates occur on master, recorded in tx log\n tx logs shipped/streamed from master to slave(s)\n slave uses tx logs to maintain current state\n configuration controls frequency of log shipping\n bringing slave up-to-date is \"fast\" (~1-2secs)\n Note: small window for data loss (committed tx log records not sent)\n Load balancing ...\n not provided built-in to PostgreSQL, 3rd-party tools exist\n Distributed Databases\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "Do you know postgresql and parallelism ?",
  "answer": "High availability ...\n updates occur on master, recorded in tx log\n tx logs shipped/streamed from master to slave(s)\n slave uses tx logs to maintain current state\n configuration controls frequency of log shipping\n bringing slave up-to-date is \"fast\" (~1-2secs)\n Note: small window for data loss (committed tx log records not sent)\n Load balancing ...\n not provided built-in to PostgreSQL, 3rd-party tools exist\n Distributed Databases\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "what about postgresql and parallelism ?",
  "answer": "High availability ...\n updates occur on master, recorded in tx log\n tx logs shipped/streamed from master to slave(s)\n slave uses tx logs to maintain current state\n configuration controls frequency of log shipping\n bringing slave up-to-date is \"fast\" (~1-2secs)\n Note: small window for data loss (committed tx log records not sent)\n Load balancing ...\n not provided built-in to PostgreSQL, 3rd-party tools exist\n Distributed Databases\n",
  "intent": "description",
  "key_words": [
   "postgresql",
   "and",
   "parallelism"
  ]
 },
 {
  "question": "What is distributed database ?",
  "answer": "A distributed database (DDB) is\n collection of multiple logically-related databases\n distributed over a network (generally a WAN)\n A distributed database management system (DDBMS) is\n software that manages a distributed database\n providing access that hides complexity of distribution\n A DDBMS may involve\n instances of a single DBMS  (e.g. \u22651 PostgreSQL servers)\n a layer over multiple different DBMSs  (e.g. Oracle+PostgreSQL+DB2)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What is distributed database ?",
  "answer": "A distributed database (DDB) is\n collection of multiple logically-related databases\n distributed over a network (generally a WAN)\n A distributed database management system (DDBMS) is\n software that manages a distributed database\n providing access that hides complexity of distribution\n A DDBMS may involve\n instances of a single DBMS  (e.g. \u22651 PostgreSQL servers)\n a layer over multiple different DBMSs  (e.g. Oracle+PostgreSQL+DB2)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What does distributed database mean ?",
  "answer": "A distributed database (DDB) is\n collection of multiple logically-related databases\n distributed over a network (generally a WAN)\n A distributed database management system (DDBMS) is\n software that manages a distributed database\n providing access that hides complexity of distribution\n A DDBMS may involve\n instances of a single DBMS  (e.g. \u22651 PostgreSQL servers)\n a layer over multiple different DBMSs  (e.g. Oracle+PostgreSQL+DB2)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Tell me something about distributed database ?",
  "answer": "A distributed database (DDB) is\n collection of multiple logically-related databases\n distributed over a network (generally a WAN)\n A distributed database management system (DDBMS) is\n software that manages a distributed database\n providing access that hides complexity of distribution\n A DDBMS may involve\n instances of a single DBMS  (e.g. \u22651 PostgreSQL servers)\n a layer over multiple different DBMSs  (e.g. Oracle+PostgreSQL+DB2)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Explain distributed database ?",
  "answer": "A distributed database (DDB) is\n collection of multiple logically-related databases\n distributed over a network (generally a WAN)\n A distributed database management system (DDBMS) is\n software that manages a distributed database\n providing access that hides complexity of distribution\n A DDBMS may involve\n instances of a single DBMS  (e.g. \u22651 PostgreSQL servers)\n a layer over multiple different DBMSs  (e.g. Oracle+PostgreSQL+DB2)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Can you tell me about distributed database ?",
  "answer": "A distributed database (DDB) is\n collection of multiple logically-related databases\n distributed over a network (generally a WAN)\n A distributed database management system (DDBMS) is\n software that manages a distributed database\n providing access that hides complexity of distribution\n A DDBMS may involve\n instances of a single DBMS  (e.g. \u22651 PostgreSQL servers)\n a layer over multiple different DBMSs  (e.g. Oracle+PostgreSQL+DB2)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What do you know about distributed database ?",
  "answer": "A distributed database (DDB) is\n collection of multiple logically-related databases\n distributed over a network (generally a WAN)\n A distributed database management system (DDBMS) is\n software that manages a distributed database\n providing access that hides complexity of distribution\n A DDBMS may involve\n instances of a single DBMS  (e.g. \u22651 PostgreSQL servers)\n a layer over multiple different DBMSs  (e.g. Oracle+PostgreSQL+DB2)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What can you tell me about distributed database ?",
  "answer": "A distributed database (DDB) is\n collection of multiple logically-related databases\n distributed over a network (generally a WAN)\n A distributed database management system (DDBMS) is\n software that manages a distributed database\n providing access that hides complexity of distribution\n A DDBMS may involve\n instances of a single DBMS  (e.g. \u22651 PostgreSQL servers)\n a layer over multiple different DBMSs  (e.g. Oracle+PostgreSQL+DB2)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "I want to know aboutdistributed database",
  "answer": "A distributed database (DDB) is\n collection of multiple logically-related databases\n distributed over a network (generally a WAN)\n A distributed database management system (DDBMS) is\n software that manages a distributed database\n providing access that hides complexity of distribution\n A DDBMS may involve\n instances of a single DBMS  (e.g. \u22651 PostgreSQL servers)\n a layer over multiple different DBMSs  (e.g. Oracle+PostgreSQL+DB2)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Do you have information about distributed database ?",
  "answer": "A distributed database (DDB) is\n collection of multiple logically-related databases\n distributed over a network (generally a WAN)\n A distributed database management system (DDBMS) is\n software that manages a distributed database\n providing access that hides complexity of distribution\n A DDBMS may involve\n instances of a single DBMS  (e.g. \u22651 PostgreSQL servers)\n a layer over multiple different DBMSs  (e.g. Oracle+PostgreSQL+DB2)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Do you know distributed database ?",
  "answer": "A distributed database (DDB) is\n collection of multiple logically-related databases\n distributed over a network (generally a WAN)\n A distributed database management system (DDBMS) is\n software that manages a distributed database\n providing access that hides complexity of distribution\n A DDBMS may involve\n instances of a single DBMS  (e.g. \u22651 PostgreSQL servers)\n a layer over multiple different DBMSs  (e.g. Oracle+PostgreSQL+DB2)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "what about distributed database ?",
  "answer": "A distributed database (DDB) is\n collection of multiple logically-related databases\n distributed over a network (generally a WAN)\n A distributed database management system (DDBMS) is\n software that manages a distributed database\n providing access that hides complexity of distribution\n A DDBMS may involve\n instances of a single DBMS  (e.g. \u22651 PostgreSQL servers)\n a layer over multiple different DBMSs  (e.g. Oracle+PostgreSQL+DB2)\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What is distributed database ?",
  "answer": "Two kinds of distributed databases\n parallel database on a distributed architecture\n single schema, homogeneous DBMSs\n independent databases on a distributed architecture\n independent schemas, heterogeneous DBMSs\n The latter are also called federated databases\n Ultimately, the distributed database (DDB) provides\n global schema, with mappings from constituent schemas\n giving the impression of a single database\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What is distributed database ?",
  "answer": "Two kinds of distributed databases\n parallel database on a distributed architecture\n single schema, homogeneous DBMSs\n independent databases on a distributed architecture\n independent schemas, heterogeneous DBMSs\n The latter are also called federated databases\n Ultimately, the distributed database (DDB) provides\n global schema, with mappings from constituent schemas\n giving the impression of a single database\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What does distributed database mean ?",
  "answer": "Two kinds of distributed databases\n parallel database on a distributed architecture\n single schema, homogeneous DBMSs\n independent databases on a distributed architecture\n independent schemas, heterogeneous DBMSs\n The latter are also called federated databases\n Ultimately, the distributed database (DDB) provides\n global schema, with mappings from constituent schemas\n giving the impression of a single database\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Tell me something about distributed database ?",
  "answer": "Two kinds of distributed databases\n parallel database on a distributed architecture\n single schema, homogeneous DBMSs\n independent databases on a distributed architecture\n independent schemas, heterogeneous DBMSs\n The latter are also called federated databases\n Ultimately, the distributed database (DDB) provides\n global schema, with mappings from constituent schemas\n giving the impression of a single database\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Explain distributed database ?",
  "answer": "Two kinds of distributed databases\n parallel database on a distributed architecture\n single schema, homogeneous DBMSs\n independent databases on a distributed architecture\n independent schemas, heterogeneous DBMSs\n The latter are also called federated databases\n Ultimately, the distributed database (DDB) provides\n global schema, with mappings from constituent schemas\n giving the impression of a single database\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Can you tell me about distributed database ?",
  "answer": "Two kinds of distributed databases\n parallel database on a distributed architecture\n single schema, homogeneous DBMSs\n independent databases on a distributed architecture\n independent schemas, heterogeneous DBMSs\n The latter are also called federated databases\n Ultimately, the distributed database (DDB) provides\n global schema, with mappings from constituent schemas\n giving the impression of a single database\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What do you know about distributed database ?",
  "answer": "Two kinds of distributed databases\n parallel database on a distributed architecture\n single schema, homogeneous DBMSs\n independent databases on a distributed architecture\n independent schemas, heterogeneous DBMSs\n The latter are also called federated databases\n Ultimately, the distributed database (DDB) provides\n global schema, with mappings from constituent schemas\n giving the impression of a single database\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What can you tell me about distributed database ?",
  "answer": "Two kinds of distributed databases\n parallel database on a distributed architecture\n single schema, homogeneous DBMSs\n independent databases on a distributed architecture\n independent schemas, heterogeneous DBMSs\n The latter are also called federated databases\n Ultimately, the distributed database (DDB) provides\n global schema, with mappings from constituent schemas\n giving the impression of a single database\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "I want to know aboutdistributed database",
  "answer": "Two kinds of distributed databases\n parallel database on a distributed architecture\n single schema, homogeneous DBMSs\n independent databases on a distributed architecture\n independent schemas, heterogeneous DBMSs\n The latter are also called federated databases\n Ultimately, the distributed database (DDB) provides\n global schema, with mappings from constituent schemas\n giving the impression of a single database\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Do you have information about distributed database ?",
  "answer": "Two kinds of distributed databases\n parallel database on a distributed architecture\n single schema, homogeneous DBMSs\n independent databases on a distributed architecture\n independent schemas, heterogeneous DBMSs\n The latter are also called federated databases\n Ultimately, the distributed database (DDB) provides\n global schema, with mappings from constituent schemas\n giving the impression of a single database\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Do you know distributed database ?",
  "answer": "Two kinds of distributed databases\n parallel database on a distributed architecture\n single schema, homogeneous DBMSs\n independent databases on a distributed architecture\n independent schemas, heterogeneous DBMSs\n The latter are also called federated databases\n Ultimately, the distributed database (DDB) provides\n global schema, with mappings from constituent schemas\n giving the impression of a single database\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "what about distributed database ?",
  "answer": "Two kinds of distributed databases\n parallel database on a distributed architecture\n single schema, homogeneous DBMSs\n independent databases on a distributed architecture\n independent schemas, heterogeneous DBMSs\n The latter are also called federated databases\n Ultimately, the distributed database (DDB) provides\n global schema, with mappings from constituent schemas\n giving the impression of a single database\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What is distributed database ?",
  "answer": "Advantages of distributed databases\n allow information from multiple DBs to be merged\n provide for replication of some data  (resilience)\n allow for possible parallel query evaluation\n Disadavtanges of distributed databases\n cost of mapping between different schemas  (federated)\n communication costs  (write-to-network vs write-to-disk)\n maintaining ACID properties in distributed transactions\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What is distributed database ?",
  "answer": "Advantages of distributed databases\n allow information from multiple DBs to be merged\n provide for replication of some data  (resilience)\n allow for possible parallel query evaluation\n Disadavtanges of distributed databases\n cost of mapping between different schemas  (federated)\n communication costs  (write-to-network vs write-to-disk)\n maintaining ACID properties in distributed transactions\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What does distributed database mean ?",
  "answer": "Advantages of distributed databases\n allow information from multiple DBs to be merged\n provide for replication of some data  (resilience)\n allow for possible parallel query evaluation\n Disadavtanges of distributed databases\n cost of mapping between different schemas  (federated)\n communication costs  (write-to-network vs write-to-disk)\n maintaining ACID properties in distributed transactions\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Tell me something about distributed database ?",
  "answer": "Advantages of distributed databases\n allow information from multiple DBs to be merged\n provide for replication of some data  (resilience)\n allow for possible parallel query evaluation\n Disadavtanges of distributed databases\n cost of mapping between different schemas  (federated)\n communication costs  (write-to-network vs write-to-disk)\n maintaining ACID properties in distributed transactions\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Explain distributed database ?",
  "answer": "Advantages of distributed databases\n allow information from multiple DBs to be merged\n provide for replication of some data  (resilience)\n allow for possible parallel query evaluation\n Disadavtanges of distributed databases\n cost of mapping between different schemas  (federated)\n communication costs  (write-to-network vs write-to-disk)\n maintaining ACID properties in distributed transactions\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Can you tell me about distributed database ?",
  "answer": "Advantages of distributed databases\n allow information from multiple DBs to be merged\n provide for replication of some data  (resilience)\n allow for possible parallel query evaluation\n Disadavtanges of distributed databases\n cost of mapping between different schemas  (federated)\n communication costs  (write-to-network vs write-to-disk)\n maintaining ACID properties in distributed transactions\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What do you know about distributed database ?",
  "answer": "Advantages of distributed databases\n allow information from multiple DBs to be merged\n provide for replication of some data  (resilience)\n allow for possible parallel query evaluation\n Disadavtanges of distributed databases\n cost of mapping between different schemas  (federated)\n communication costs  (write-to-network vs write-to-disk)\n maintaining ACID properties in distributed transactions\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What can you tell me about distributed database ?",
  "answer": "Advantages of distributed databases\n allow information from multiple DBs to be merged\n provide for replication of some data  (resilience)\n allow for possible parallel query evaluation\n Disadavtanges of distributed databases\n cost of mapping between different schemas  (federated)\n communication costs  (write-to-network vs write-to-disk)\n maintaining ACID properties in distributed transactions\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "I want to know aboutdistributed database",
  "answer": "Advantages of distributed databases\n allow information from multiple DBs to be merged\n provide for replication of some data  (resilience)\n allow for possible parallel query evaluation\n Disadavtanges of distributed databases\n cost of mapping between different schemas  (federated)\n communication costs  (write-to-network vs write-to-disk)\n maintaining ACID properties in distributed transactions\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Do you have information about distributed database ?",
  "answer": "Advantages of distributed databases\n allow information from multiple DBs to be merged\n provide for replication of some data  (resilience)\n allow for possible parallel query evaluation\n Disadavtanges of distributed databases\n cost of mapping between different schemas  (federated)\n communication costs  (write-to-network vs write-to-disk)\n maintaining ACID properties in distributed transactions\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Do you know distributed database ?",
  "answer": "Advantages of distributed databases\n allow information from multiple DBs to be merged\n provide for replication of some data  (resilience)\n allow for possible parallel query evaluation\n Disadavtanges of distributed databases\n cost of mapping between different schemas  (federated)\n communication costs  (write-to-network vs write-to-disk)\n maintaining ACID properties in distributed transactions\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "what about distributed database ?",
  "answer": "Advantages of distributed databases\n allow information from multiple DBs to be merged\n provide for replication of some data  (resilience)\n allow for possible parallel query evaluation\n Disadavtanges of distributed databases\n cost of mapping between different schemas  (federated)\n communication costs  (write-to-network vs write-to-disk)\n maintaining ACID properties in distributed transactions\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What is distributed database ?",
  "answer": "Application examples:\n bank with multiple branches\n local branch-related data (e.g. accounts) stored in branch\n corporate data (e.g. HR) stored on central server(s)\n central register of credit-worthiness for customers\n chain of department stores\n store-related data (e.g. sales, inventory) stored in store\n corporate data (e.g. HR, customers) stored on central server(s)\n sales data sent to data warehouse for analysis\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What is distributed database ?",
  "answer": "Application examples:\n bank with multiple branches\n local branch-related data (e.g. accounts) stored in branch\n corporate data (e.g. HR) stored on central server(s)\n central register of credit-worthiness for customers\n chain of department stores\n store-related data (e.g. sales, inventory) stored in store\n corporate data (e.g. HR, customers) stored on central server(s)\n sales data sent to data warehouse for analysis\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What does distributed database mean ?",
  "answer": "Application examples:\n bank with multiple branches\n local branch-related data (e.g. accounts) stored in branch\n corporate data (e.g. HR) stored on central server(s)\n central register of credit-worthiness for customers\n chain of department stores\n store-related data (e.g. sales, inventory) stored in store\n corporate data (e.g. HR, customers) stored on central server(s)\n sales data sent to data warehouse for analysis\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Tell me something about distributed database ?",
  "answer": "Application examples:\n bank with multiple branches\n local branch-related data (e.g. accounts) stored in branch\n corporate data (e.g. HR) stored on central server(s)\n central register of credit-worthiness for customers\n chain of department stores\n store-related data (e.g. sales, inventory) stored in store\n corporate data (e.g. HR, customers) stored on central server(s)\n sales data sent to data warehouse for analysis\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Explain distributed database ?",
  "answer": "Application examples:\n bank with multiple branches\n local branch-related data (e.g. accounts) stored in branch\n corporate data (e.g. HR) stored on central server(s)\n central register of credit-worthiness for customers\n chain of department stores\n store-related data (e.g. sales, inventory) stored in store\n corporate data (e.g. HR, customers) stored on central server(s)\n sales data sent to data warehouse for analysis\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Can you tell me about distributed database ?",
  "answer": "Application examples:\n bank with multiple branches\n local branch-related data (e.g. accounts) stored in branch\n corporate data (e.g. HR) stored on central server(s)\n central register of credit-worthiness for customers\n chain of department stores\n store-related data (e.g. sales, inventory) stored in store\n corporate data (e.g. HR, customers) stored on central server(s)\n sales data sent to data warehouse for analysis\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What do you know about distributed database ?",
  "answer": "Application examples:\n bank with multiple branches\n local branch-related data (e.g. accounts) stored in branch\n corporate data (e.g. HR) stored on central server(s)\n central register of credit-worthiness for customers\n chain of department stores\n store-related data (e.g. sales, inventory) stored in store\n corporate data (e.g. HR, customers) stored on central server(s)\n sales data sent to data warehouse for analysis\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What can you tell me about distributed database ?",
  "answer": "Application examples:\n bank with multiple branches\n local branch-related data (e.g. accounts) stored in branch\n corporate data (e.g. HR) stored on central server(s)\n central register of credit-worthiness for customers\n chain of department stores\n store-related data (e.g. sales, inventory) stored in store\n corporate data (e.g. HR, customers) stored on central server(s)\n sales data sent to data warehouse for analysis\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "I want to know aboutdistributed database",
  "answer": "Application examples:\n bank with multiple branches\n local branch-related data (e.g. accounts) stored in branch\n corporate data (e.g. HR) stored on central server(s)\n central register of credit-worthiness for customers\n chain of department stores\n store-related data (e.g. sales, inventory) stored in store\n corporate data (e.g. HR, customers) stored on central server(s)\n sales data sent to data warehouse for analysis\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Do you have information about distributed database ?",
  "answer": "Application examples:\n bank with multiple branches\n local branch-related data (e.g. accounts) stored in branch\n corporate data (e.g. HR) stored on central server(s)\n central register of credit-worthiness for customers\n chain of department stores\n store-related data (e.g. sales, inventory) stored in store\n corporate data (e.g. HR, customers) stored on central server(s)\n sales data sent to data warehouse for analysis\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Do you know distributed database ?",
  "answer": "Application examples:\n bank with multiple branches\n local branch-related data (e.g. accounts) stored in branch\n corporate data (e.g. HR) stored on central server(s)\n central register of credit-worthiness for customers\n chain of department stores\n store-related data (e.g. sales, inventory) stored in store\n corporate data (e.g. HR, customers) stored on central server(s)\n sales data sent to data warehouse for analysis\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "what about distributed database ?",
  "answer": "Application examples:\n bank with multiple branches\n local branch-related data (e.g. accounts) stored in branch\n corporate data (e.g. HR) stored on central server(s)\n central register of credit-worthiness for customers\n chain of department stores\n store-related data (e.g. sales, inventory) stored in store\n corporate data (e.g. HR, customers) stored on central server(s)\n sales data sent to data warehouse for analysis\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What is distributed database ?",
  "answer": "In both examples\n some data is conceptually a single table at corporate level\n but does not physically exist as a table in one location\n E.g. account(acct_id, branch, customer, balance)\n each branch maintains its own data (for its accounts)\n set of tuples, all with same branch\n bank also needs a view of all accounts\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What is distributed database ?",
  "answer": "In both examples\n some data is conceptually a single table at corporate level\n but does not physically exist as a table in one location\n E.g. account(acct_id, branch, customer, balance)\n each branch maintains its own data (for its accounts)\n set of tuples, all with same branch\n bank also needs a view of all accounts\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What does distributed database mean ?",
  "answer": "In both examples\n some data is conceptually a single table at corporate level\n but does not physically exist as a table in one location\n E.g. account(acct_id, branch, customer, balance)\n each branch maintains its own data (for its accounts)\n set of tuples, all with same branch\n bank also needs a view of all accounts\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Tell me something about distributed database ?",
  "answer": "In both examples\n some data is conceptually a single table at corporate level\n but does not physically exist as a table in one location\n E.g. account(acct_id, branch, customer, balance)\n each branch maintains its own data (for its accounts)\n set of tuples, all with same branch\n bank also needs a view of all accounts\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Explain distributed database ?",
  "answer": "In both examples\n some data is conceptually a single table at corporate level\n but does not physically exist as a table in one location\n E.g. account(acct_id, branch, customer, balance)\n each branch maintains its own data (for its accounts)\n set of tuples, all with same branch\n bank also needs a view of all accounts\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Can you tell me about distributed database ?",
  "answer": "In both examples\n some data is conceptually a single table at corporate level\n but does not physically exist as a table in one location\n E.g. account(acct_id, branch, customer, balance)\n each branch maintains its own data (for its accounts)\n set of tuples, all with same branch\n bank also needs a view of all accounts\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What do you know about distributed database ?",
  "answer": "In both examples\n some data is conceptually a single table at corporate level\n but does not physically exist as a table in one location\n E.g. account(acct_id, branch, customer, balance)\n each branch maintains its own data (for its accounts)\n set of tuples, all with same branch\n bank also needs a view of all accounts\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What can you tell me about distributed database ?",
  "answer": "In both examples\n some data is conceptually a single table at corporate level\n but does not physically exist as a table in one location\n E.g. account(acct_id, branch, customer, balance)\n each branch maintains its own data (for its accounts)\n set of tuples, all with same branch\n bank also needs a view of all accounts\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "I want to know aboutdistributed database",
  "answer": "In both examples\n some data is conceptually a single table at corporate level\n but does not physically exist as a table in one location\n E.g. account(acct_id, branch, customer, balance)\n each branch maintains its own data (for its accounts)\n set of tuples, all with same branch\n bank also needs a view of all accounts\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Do you have information about distributed database ?",
  "answer": "In both examples\n some data is conceptually a single table at corporate level\n but does not physically exist as a table in one location\n E.g. account(acct_id, branch, customer, balance)\n each branch maintains its own data (for its accounts)\n set of tuples, all with same branch\n bank also needs a view of all accounts\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "Do you know distributed database ?",
  "answer": "In both examples\n some data is conceptually a single table at corporate level\n but does not physically exist as a table in one location\n E.g. account(acct_id, branch, customer, balance)\n each branch maintains its own data (for its accounts)\n set of tuples, all with same branch\n bank also needs a view of all accounts\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "what about distributed database ?",
  "answer": "In both examples\n some data is conceptually a single table at corporate level\n but does not physically exist as a table in one location\n E.g. account(acct_id, branch, customer, balance)\n each branch maintains its own data (for its accounts)\n set of tuples, all with same branch\n bank also needs a view of all accounts\n",
  "intent": "description",
  "key_words": [
   "distributed",
   "database"
  ]
 },
 {
  "question": "What is data distribution ?",
  "answer": "Partitioning/distributing data\n where to place (parts of) tables\n determined by usage of data  (locality, used together)\n affects communication cost \u21d2 query evaluation cost\n how to partition data within tables\n no partitioning ... whole table stored on \u22651 DBMS\n horizontal partitioning ... subsets of rows\n vertical partitioning ... subsets of columns\n Problem: maintaining consistency\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "What is data distribution ?",
  "answer": "Partitioning/distributing data\n where to place (parts of) tables\n determined by usage of data  (locality, used together)\n affects communication cost \u21d2 query evaluation cost\n how to partition data within tables\n no partitioning ... whole table stored on \u22651 DBMS\n horizontal partitioning ... subsets of rows\n vertical partitioning ... subsets of columns\n Problem: maintaining consistency\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "What does data distribution mean ?",
  "answer": "Partitioning/distributing data\n where to place (parts of) tables\n determined by usage of data  (locality, used together)\n affects communication cost \u21d2 query evaluation cost\n how to partition data within tables\n no partitioning ... whole table stored on \u22651 DBMS\n horizontal partitioning ... subsets of rows\n vertical partitioning ... subsets of columns\n Problem: maintaining consistency\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "Tell me something about data distribution ?",
  "answer": "Partitioning/distributing data\n where to place (parts of) tables\n determined by usage of data  (locality, used together)\n affects communication cost \u21d2 query evaluation cost\n how to partition data within tables\n no partitioning ... whole table stored on \u22651 DBMS\n horizontal partitioning ... subsets of rows\n vertical partitioning ... subsets of columns\n Problem: maintaining consistency\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "Explain data distribution ?",
  "answer": "Partitioning/distributing data\n where to place (parts of) tables\n determined by usage of data  (locality, used together)\n affects communication cost \u21d2 query evaluation cost\n how to partition data within tables\n no partitioning ... whole table stored on \u22651 DBMS\n horizontal partitioning ... subsets of rows\n vertical partitioning ... subsets of columns\n Problem: maintaining consistency\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "Can you tell me about data distribution ?",
  "answer": "Partitioning/distributing data\n where to place (parts of) tables\n determined by usage of data  (locality, used together)\n affects communication cost \u21d2 query evaluation cost\n how to partition data within tables\n no partitioning ... whole table stored on \u22651 DBMS\n horizontal partitioning ... subsets of rows\n vertical partitioning ... subsets of columns\n Problem: maintaining consistency\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "What do you know about data distribution ?",
  "answer": "Partitioning/distributing data\n where to place (parts of) tables\n determined by usage of data  (locality, used together)\n affects communication cost \u21d2 query evaluation cost\n how to partition data within tables\n no partitioning ... whole table stored on \u22651 DBMS\n horizontal partitioning ... subsets of rows\n vertical partitioning ... subsets of columns\n Problem: maintaining consistency\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "What can you tell me about data distribution ?",
  "answer": "Partitioning/distributing data\n where to place (parts of) tables\n determined by usage of data  (locality, used together)\n affects communication cost \u21d2 query evaluation cost\n how to partition data within tables\n no partitioning ... whole table stored on \u22651 DBMS\n horizontal partitioning ... subsets of rows\n vertical partitioning ... subsets of columns\n Problem: maintaining consistency\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "I want to know aboutdata distribution",
  "answer": "Partitioning/distributing data\n where to place (parts of) tables\n determined by usage of data  (locality, used together)\n affects communication cost \u21d2 query evaluation cost\n how to partition data within tables\n no partitioning ... whole table stored on \u22651 DBMS\n horizontal partitioning ... subsets of rows\n vertical partitioning ... subsets of columns\n Problem: maintaining consistency\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "Do you have information about data distribution ?",
  "answer": "Partitioning/distributing data\n where to place (parts of) tables\n determined by usage of data  (locality, used together)\n affects communication cost \u21d2 query evaluation cost\n how to partition data within tables\n no partitioning ... whole table stored on \u22651 DBMS\n horizontal partitioning ... subsets of rows\n vertical partitioning ... subsets of columns\n Problem: maintaining consistency\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "Do you know data distribution ?",
  "answer": "Partitioning/distributing data\n where to place (parts of) tables\n determined by usage of data  (locality, used together)\n affects communication cost \u21d2 query evaluation cost\n how to partition data within tables\n no partitioning ... whole table stored on \u22651 DBMS\n horizontal partitioning ... subsets of rows\n vertical partitioning ... subsets of columns\n Problem: maintaining consistency\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "what about data distribution ?",
  "answer": "Partitioning/distributing data\n where to place (parts of) tables\n determined by usage of data  (locality, used together)\n affects communication cost \u21d2 query evaluation cost\n how to partition data within tables\n no partitioning ... whole table stored on \u22651 DBMS\n horizontal partitioning ... subsets of rows\n vertical partitioning ... subsets of columns\n Problem: maintaining consistency\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "What is data distribution ?",
  "answer": "Consider table R decomposed into R1, R2, ..., Rn\n Fragmentation can be done in multiple ways, but need to ensure ...\n Completeness\n decompostion is complete iff each t\u2208R is in some Ri\n Reconstruction\n original R can be produced by some relational operation\n Disjoint\n if item t \u2208 Ri, then t \u2209 Rk, k \u2260 i   (assuming no replication)\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "What is data distribution ?",
  "answer": "Consider table R decomposed into R1, R2, ..., Rn\n Fragmentation can be done in multiple ways, but need to ensure ...\n Completeness\n decompostion is complete iff each t\u2208R is in some Ri\n Reconstruction\n original R can be produced by some relational operation\n Disjoint\n if item t \u2208 Ri, then t \u2209 Rk, k \u2260 i   (assuming no replication)\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "What does data distribution mean ?",
  "answer": "Consider table R decomposed into R1, R2, ..., Rn\n Fragmentation can be done in multiple ways, but need to ensure ...\n Completeness\n decompostion is complete iff each t\u2208R is in some Ri\n Reconstruction\n original R can be produced by some relational operation\n Disjoint\n if item t \u2208 Ri, then t \u2209 Rk, k \u2260 i   (assuming no replication)\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "Tell me something about data distribution ?",
  "answer": "Consider table R decomposed into R1, R2, ..., Rn\n Fragmentation can be done in multiple ways, but need to ensure ...\n Completeness\n decompostion is complete iff each t\u2208R is in some Ri\n Reconstruction\n original R can be produced by some relational operation\n Disjoint\n if item t \u2208 Ri, then t \u2209 Rk, k \u2260 i   (assuming no replication)\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "Explain data distribution ?",
  "answer": "Consider table R decomposed into R1, R2, ..., Rn\n Fragmentation can be done in multiple ways, but need to ensure ...\n Completeness\n decompostion is complete iff each t\u2208R is in some Ri\n Reconstruction\n original R can be produced by some relational operation\n Disjoint\n if item t \u2208 Ri, then t \u2209 Rk, k \u2260 i   (assuming no replication)\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "Can you tell me about data distribution ?",
  "answer": "Consider table R decomposed into R1, R2, ..., Rn\n Fragmentation can be done in multiple ways, but need to ensure ...\n Completeness\n decompostion is complete iff each t\u2208R is in some Ri\n Reconstruction\n original R can be produced by some relational operation\n Disjoint\n if item t \u2208 Ri, then t \u2209 Rk, k \u2260 i   (assuming no replication)\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "What do you know about data distribution ?",
  "answer": "Consider table R decomposed into R1, R2, ..., Rn\n Fragmentation can be done in multiple ways, but need to ensure ...\n Completeness\n decompostion is complete iff each t\u2208R is in some Ri\n Reconstruction\n original R can be produced by some relational operation\n Disjoint\n if item t \u2208 Ri, then t \u2209 Rk, k \u2260 i   (assuming no replication)\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "What can you tell me about data distribution ?",
  "answer": "Consider table R decomposed into R1, R2, ..., Rn\n Fragmentation can be done in multiple ways, but need to ensure ...\n Completeness\n decompostion is complete iff each t\u2208R is in some Ri\n Reconstruction\n original R can be produced by some relational operation\n Disjoint\n if item t \u2208 Ri, then t \u2209 Rk, k \u2260 i   (assuming no replication)\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "I want to know aboutdata distribution",
  "answer": "Consider table R decomposed into R1, R2, ..., Rn\n Fragmentation can be done in multiple ways, but need to ensure ...\n Completeness\n decompostion is complete iff each t\u2208R is in some Ri\n Reconstruction\n original R can be produced by some relational operation\n Disjoint\n if item t \u2208 Ri, then t \u2209 Rk, k \u2260 i   (assuming no replication)\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "Do you have information about data distribution ?",
  "answer": "Consider table R decomposed into R1, R2, ..., Rn\n Fragmentation can be done in multiple ways, but need to ensure ...\n Completeness\n decompostion is complete iff each t\u2208R is in some Ri\n Reconstruction\n original R can be produced by some relational operation\n Disjoint\n if item t \u2208 Ri, then t \u2209 Rk, k \u2260 i   (assuming no replication)\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "Do you know data distribution ?",
  "answer": "Consider table R decomposed into R1, R2, ..., Rn\n Fragmentation can be done in multiple ways, but need to ensure ...\n Completeness\n decompostion is complete iff each t\u2208R is in some Ri\n Reconstruction\n original R can be produced by some relational operation\n Disjoint\n if item t \u2208 Ri, then t \u2209 Rk, k \u2260 i   (assuming no replication)\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "what about data distribution ?",
  "answer": "Consider table R decomposed into R1, R2, ..., Rn\n Fragmentation can be done in multiple ways, but need to ensure ...\n Completeness\n decompostion is complete iff each t\u2208R is in some Ri\n Reconstruction\n original R can be produced by some relational operation\n Disjoint\n if item t \u2208 Ri, then t \u2209 Rk, k \u2260 i   (assuming no replication)\n",
  "intent": "description",
  "key_words": [
   "data",
   "distribution"
  ]
 },
 {
  "question": "What is query processing ?",
  "answer": "Query processing typically involves shipping data\n e.g. reconstructing table from distributed partitions\n e.g. join on tables stored on separate sites\n Aim: minimise shipping cost   (since it is a networking cost)\n Shipping cost becomes the \"disk access cost\" of DQOpt\n Larger space of possibilities than standard QOpt, but same principle\n consider possible execution plans, choose cheapest\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "What is query processing ?",
  "answer": "Query processing typically involves shipping data\n e.g. reconstructing table from distributed partitions\n e.g. join on tables stored on separate sites\n Aim: minimise shipping cost   (since it is a networking cost)\n Shipping cost becomes the \"disk access cost\" of DQOpt\n Larger space of possibilities than standard QOpt, but same principle\n consider possible execution plans, choose cheapest\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "What does query processing mean ?",
  "answer": "Query processing typically involves shipping data\n e.g. reconstructing table from distributed partitions\n e.g. join on tables stored on separate sites\n Aim: minimise shipping cost   (since it is a networking cost)\n Shipping cost becomes the \"disk access cost\" of DQOpt\n Larger space of possibilities than standard QOpt, but same principle\n consider possible execution plans, choose cheapest\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "Tell me something about query processing ?",
  "answer": "Query processing typically involves shipping data\n e.g. reconstructing table from distributed partitions\n e.g. join on tables stored on separate sites\n Aim: minimise shipping cost   (since it is a networking cost)\n Shipping cost becomes the \"disk access cost\" of DQOpt\n Larger space of possibilities than standard QOpt, but same principle\n consider possible execution plans, choose cheapest\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "Explain query processing ?",
  "answer": "Query processing typically involves shipping data\n e.g. reconstructing table from distributed partitions\n e.g. join on tables stored on separate sites\n Aim: minimise shipping cost   (since it is a networking cost)\n Shipping cost becomes the \"disk access cost\" of DQOpt\n Larger space of possibilities than standard QOpt, but same principle\n consider possible execution plans, choose cheapest\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "Can you tell me about query processing ?",
  "answer": "Query processing typically involves shipping data\n e.g. reconstructing table from distributed partitions\n e.g. join on tables stored on separate sites\n Aim: minimise shipping cost   (since it is a networking cost)\n Shipping cost becomes the \"disk access cost\" of DQOpt\n Larger space of possibilities than standard QOpt, but same principle\n consider possible execution plans, choose cheapest\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "What do you know about query processing ?",
  "answer": "Query processing typically involves shipping data\n e.g. reconstructing table from distributed partitions\n e.g. join on tables stored on separate sites\n Aim: minimise shipping cost   (since it is a networking cost)\n Shipping cost becomes the \"disk access cost\" of DQOpt\n Larger space of possibilities than standard QOpt, but same principle\n consider possible execution plans, choose cheapest\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "What can you tell me about query processing ?",
  "answer": "Query processing typically involves shipping data\n e.g. reconstructing table from distributed partitions\n e.g. join on tables stored on separate sites\n Aim: minimise shipping cost   (since it is a networking cost)\n Shipping cost becomes the \"disk access cost\" of DQOpt\n Larger space of possibilities than standard QOpt, but same principle\n consider possible execution plans, choose cheapest\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "I want to know aboutquery processing",
  "answer": "Query processing typically involves shipping data\n e.g. reconstructing table from distributed partitions\n e.g. join on tables stored on separate sites\n Aim: minimise shipping cost   (since it is a networking cost)\n Shipping cost becomes the \"disk access cost\" of DQOpt\n Larger space of possibilities than standard QOpt, but same principle\n consider possible execution plans, choose cheapest\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "Do you have information about query processing ?",
  "answer": "Query processing typically involves shipping data\n e.g. reconstructing table from distributed partitions\n e.g. join on tables stored on separate sites\n Aim: minimise shipping cost   (since it is a networking cost)\n Shipping cost becomes the \"disk access cost\" of DQOpt\n Larger space of possibilities than standard QOpt, but same principle\n consider possible execution plans, choose cheapest\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "Do you know query processing ?",
  "answer": "Query processing typically involves shipping data\n e.g. reconstructing table from distributed partitions\n e.g. join on tables stored on separate sites\n Aim: minimise shipping cost   (since it is a networking cost)\n Shipping cost becomes the \"disk access cost\" of DQOpt\n Larger space of possibilities than standard QOpt, but same principle\n consider possible execution plans, choose cheapest\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "what about query processing ?",
  "answer": "Query processing typically involves shipping data\n e.g. reconstructing table from distributed partitions\n e.g. join on tables stored on separate sites\n Aim: minimise shipping cost   (since it is a networking cost)\n Shipping cost becomes the \"disk access cost\" of DQOpt\n Larger space of possibilities than standard QOpt, but same principle\n consider possible execution plans, choose cheapest\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "What is query processing ?",
  "answer": "Distributed query processing\n may require query ops to be executed on different nodes\n node provides only source of some data\n some nodes may have limited set of operations\n needs to merge data received from different nodes\n may require data transformation (to fit schemas together)\n Query optimisation in such contexts is complex.\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "What is query processing ?",
  "answer": "Distributed query processing\n may require query ops to be executed on different nodes\n node provides only source of some data\n some nodes may have limited set of operations\n needs to merge data received from different nodes\n may require data transformation (to fit schemas together)\n Query optimisation in such contexts is complex.\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "What does query processing mean ?",
  "answer": "Distributed query processing\n may require query ops to be executed on different nodes\n node provides only source of some data\n some nodes may have limited set of operations\n needs to merge data received from different nodes\n may require data transformation (to fit schemas together)\n Query optimisation in such contexts is complex.\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "Tell me something about query processing ?",
  "answer": "Distributed query processing\n may require query ops to be executed on different nodes\n node provides only source of some data\n some nodes may have limited set of operations\n needs to merge data received from different nodes\n may require data transformation (to fit schemas together)\n Query optimisation in such contexts is complex.\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "Explain query processing ?",
  "answer": "Distributed query processing\n may require query ops to be executed on different nodes\n node provides only source of some data\n some nodes may have limited set of operations\n needs to merge data received from different nodes\n may require data transformation (to fit schemas together)\n Query optimisation in such contexts is complex.\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "Can you tell me about query processing ?",
  "answer": "Distributed query processing\n may require query ops to be executed on different nodes\n node provides only source of some data\n some nodes may have limited set of operations\n needs to merge data received from different nodes\n may require data transformation (to fit schemas together)\n Query optimisation in such contexts is complex.\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "What do you know about query processing ?",
  "answer": "Distributed query processing\n may require query ops to be executed on different nodes\n node provides only source of some data\n some nodes may have limited set of operations\n needs to merge data received from different nodes\n may require data transformation (to fit schemas together)\n Query optimisation in such contexts is complex.\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "What can you tell me about query processing ?",
  "answer": "Distributed query processing\n may require query ops to be executed on different nodes\n node provides only source of some data\n some nodes may have limited set of operations\n needs to merge data received from different nodes\n may require data transformation (to fit schemas together)\n Query optimisation in such contexts is complex.\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "I want to know aboutquery processing",
  "answer": "Distributed query processing\n may require query ops to be executed on different nodes\n node provides only source of some data\n some nodes may have limited set of operations\n needs to merge data received from different nodes\n may require data transformation (to fit schemas together)\n Query optimisation in such contexts is complex.\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "Do you have information about query processing ?",
  "answer": "Distributed query processing\n may require query ops to be executed on different nodes\n node provides only source of some data\n some nodes may have limited set of operations\n needs to merge data received from different nodes\n may require data transformation (to fit schemas together)\n Query optimisation in such contexts is complex.\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "Do you know query processing ?",
  "answer": "Distributed query processing\n may require query ops to be executed on different nodes\n node provides only source of some data\n some nodes may have limited set of operations\n needs to merge data received from different nodes\n may require data transformation (to fit schemas together)\n Query optimisation in such contexts is complex.\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "what about query processing ?",
  "answer": "Distributed query processing\n may require query ops to be executed on different nodes\n node provides only source of some data\n some nodes may have limited set of operations\n needs to merge data received from different nodes\n may require data transformation (to fit schemas together)\n Query optimisation in such contexts is complex.\n",
  "intent": "description",
  "key_words": [
   "query",
   "processing"
  ]
 },
 {
  "question": "What is transaction processing ?",
  "answer": "Distribution of data complicates tx processing ...\n potential for multiple copies of data to become inconsistent\n commit or abort must occur consistently on all nodes\n Distributed tx processing handled by two-phase commit\n initiating site has transaction coordinator Ci ...\n waits for all other sites executing tx T to \"complete\"\n sends <prepare T> message to all other sites\n waits for <ready T> response from all other sites\n if not received (timeout), or <abort T> received, flag abort\n if all other sites respond <ready T>, flag commit\n write <commit T> or <abort T> to log\n send <commit T> or <abort T> to all other sites\n non-initiating sites write log entries before responding\n Produced: 4 Oct 2018\n",
  "intent": "description",
  "key_words": [
   "transaction",
   "processing"
  ]
 },
 {
  "question": "What is transaction processing ?",
  "answer": "Distribution of data complicates tx processing ...\n potential for multiple copies of data to become inconsistent\n commit or abort must occur consistently on all nodes\n Distributed tx processing handled by two-phase commit\n initiating site has transaction coordinator Ci ...\n waits for all other sites executing tx T to \"complete\"\n sends <prepare T> message to all other sites\n waits for <ready T> response from all other sites\n if not received (timeout), or <abort T> received, flag abort\n if all other sites respond <ready T>, flag commit\n write <commit T> or <abort T> to log\n send <commit T> or <abort T> to all other sites\n non-initiating sites write log entries before responding\n Produced: 4 Oct 2018\n",
  "intent": "description",
  "key_words": [
   "transaction",
   "processing"
  ]
 },
 {
  "question": "What does transaction processing mean ?",
  "answer": "Distribution of data complicates tx processing ...\n potential for multiple copies of data to become inconsistent\n commit or abort must occur consistently on all nodes\n Distributed tx processing handled by two-phase commit\n initiating site has transaction coordinator Ci ...\n waits for all other sites executing tx T to \"complete\"\n sends <prepare T> message to all other sites\n waits for <ready T> response from all other sites\n if not received (timeout), or <abort T> received, flag abort\n if all other sites respond <ready T>, flag commit\n write <commit T> or <abort T> to log\n send <commit T> or <abort T> to all other sites\n non-initiating sites write log entries before responding\n Produced: 4 Oct 2018\n",
  "intent": "description",
  "key_words": [
   "transaction",
   "processing"
  ]
 },
 {
  "question": "Tell me something about transaction processing ?",
  "answer": "Distribution of data complicates tx processing ...\n potential for multiple copies of data to become inconsistent\n commit or abort must occur consistently on all nodes\n Distributed tx processing handled by two-phase commit\n initiating site has transaction coordinator Ci ...\n waits for all other sites executing tx T to \"complete\"\n sends <prepare T> message to all other sites\n waits for <ready T> response from all other sites\n if not received (timeout), or <abort T> received, flag abort\n if all other sites respond <ready T>, flag commit\n write <commit T> or <abort T> to log\n send <commit T> or <abort T> to all other sites\n non-initiating sites write log entries before responding\n Produced: 4 Oct 2018\n",
  "intent": "description",
  "key_words": [
   "transaction",
   "processing"
  ]
 },
 {
  "question": "Explain transaction processing ?",
  "answer": "Distribution of data complicates tx processing ...\n potential for multiple copies of data to become inconsistent\n commit or abort must occur consistently on all nodes\n Distributed tx processing handled by two-phase commit\n initiating site has transaction coordinator Ci ...\n waits for all other sites executing tx T to \"complete\"\n sends <prepare T> message to all other sites\n waits for <ready T> response from all other sites\n if not received (timeout), or <abort T> received, flag abort\n if all other sites respond <ready T>, flag commit\n write <commit T> or <abort T> to log\n send <commit T> or <abort T> to all other sites\n non-initiating sites write log entries before responding\n Produced: 4 Oct 2018\n",
  "intent": "description",
  "key_words": [
   "transaction",
   "processing"
  ]
 },
 {
  "question": "Can you tell me about transaction processing ?",
  "answer": "Distribution of data complicates tx processing ...\n potential for multiple copies of data to become inconsistent\n commit or abort must occur consistently on all nodes\n Distributed tx processing handled by two-phase commit\n initiating site has transaction coordinator Ci ...\n waits for all other sites executing tx T to \"complete\"\n sends <prepare T> message to all other sites\n waits for <ready T> response from all other sites\n if not received (timeout), or <abort T> received, flag abort\n if all other sites respond <ready T>, flag commit\n write <commit T> or <abort T> to log\n send <commit T> or <abort T> to all other sites\n non-initiating sites write log entries before responding\n Produced: 4 Oct 2018\n",
  "intent": "description",
  "key_words": [
   "transaction",
   "processing"
  ]
 },
 {
  "question": "What do you know about transaction processing ?",
  "answer": "Distribution of data complicates tx processing ...\n potential for multiple copies of data to become inconsistent\n commit or abort must occur consistently on all nodes\n Distributed tx processing handled by two-phase commit\n initiating site has transaction coordinator Ci ...\n waits for all other sites executing tx T to \"complete\"\n sends <prepare T> message to all other sites\n waits for <ready T> response from all other sites\n if not received (timeout), or <abort T> received, flag abort\n if all other sites respond <ready T>, flag commit\n write <commit T> or <abort T> to log\n send <commit T> or <abort T> to all other sites\n non-initiating sites write log entries before responding\n Produced: 4 Oct 2018\n",
  "intent": "description",
  "key_words": [
   "transaction",
   "processing"
  ]
 },
 {
  "question": "What can you tell me about transaction processing ?",
  "answer": "Distribution of data complicates tx processing ...\n potential for multiple copies of data to become inconsistent\n commit or abort must occur consistently on all nodes\n Distributed tx processing handled by two-phase commit\n initiating site has transaction coordinator Ci ...\n waits for all other sites executing tx T to \"complete\"\n sends <prepare T> message to all other sites\n waits for <ready T> response from all other sites\n if not received (timeout), or <abort T> received, flag abort\n if all other sites respond <ready T>, flag commit\n write <commit T> or <abort T> to log\n send <commit T> or <abort T> to all other sites\n non-initiating sites write log entries before responding\n Produced: 4 Oct 2018\n",
  "intent": "description",
  "key_words": [
   "transaction",
   "processing"
  ]
 },
 {
  "question": "I want to know abouttransaction processing",
  "answer": "Distribution of data complicates tx processing ...\n potential for multiple copies of data to become inconsistent\n commit or abort must occur consistently on all nodes\n Distributed tx processing handled by two-phase commit\n initiating site has transaction coordinator Ci ...\n waits for all other sites executing tx T to \"complete\"\n sends <prepare T> message to all other sites\n waits for <ready T> response from all other sites\n if not received (timeout), or <abort T> received, flag abort\n if all other sites respond <ready T>, flag commit\n write <commit T> or <abort T> to log\n send <commit T> or <abort T> to all other sites\n non-initiating sites write log entries before responding\n Produced: 4 Oct 2018\n",
  "intent": "description",
  "key_words": [
   "transaction",
   "processing"
  ]
 },
 {
  "question": "Do you have information about transaction processing ?",
  "answer": "Distribution of data complicates tx processing ...\n potential for multiple copies of data to become inconsistent\n commit or abort must occur consistently on all nodes\n Distributed tx processing handled by two-phase commit\n initiating site has transaction coordinator Ci ...\n waits for all other sites executing tx T to \"complete\"\n sends <prepare T> message to all other sites\n waits for <ready T> response from all other sites\n if not received (timeout), or <abort T> received, flag abort\n if all other sites respond <ready T>, flag commit\n write <commit T> or <abort T> to log\n send <commit T> or <abort T> to all other sites\n non-initiating sites write log entries before responding\n Produced: 4 Oct 2018\n",
  "intent": "description",
  "key_words": [
   "transaction",
   "processing"
  ]
 },
 {
  "question": "Do you know transaction processing ?",
  "answer": "Distribution of data complicates tx processing ...\n potential for multiple copies of data to become inconsistent\n commit or abort must occur consistently on all nodes\n Distributed tx processing handled by two-phase commit\n initiating site has transaction coordinator Ci ...\n waits for all other sites executing tx T to \"complete\"\n sends <prepare T> message to all other sites\n waits for <ready T> response from all other sites\n if not received (timeout), or <abort T> received, flag abort\n if all other sites respond <ready T>, flag commit\n write <commit T> or <abort T> to log\n send <commit T> or <abort T> to all other sites\n non-initiating sites write log entries before responding\n Produced: 4 Oct 2018\n",
  "intent": "description",
  "key_words": [
   "transaction",
   "processing"
  ]
 },
 {
  "question": "what about transaction processing ?",
  "answer": "Distribution of data complicates tx processing ...\n potential for multiple copies of data to become inconsistent\n commit or abort must occur consistently on all nodes\n Distributed tx processing handled by two-phase commit\n initiating site has transaction coordinator Ci ...\n waits for all other sites executing tx T to \"complete\"\n sends <prepare T> message to all other sites\n waits for <ready T> response from all other sites\n if not received (timeout), or <abort T> received, flag abort\n if all other sites respond <ready T>, flag commit\n write <commit T> or <abort T> to log\n send <commit T> or <abort T> to all other sites\n non-initiating sites write log entries before responding\n Produced: 4 Oct 2018\n",
  "intent": "description",
  "key_words": [
   "transaction",
   "processing"
  ]
 }
]